<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Casino Users Clean+' inline='true' name='federated.0oawgx50w7lkkq14r800u0z1aolk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Casino Users Clean' name='textscan.1e9qiny1tc8kk612ri36j1c2jf1d'>
            <connection class='textscan' directory='C:/Users/panos/Desktop/Novibet' filename='Casino Users Clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Casino Users Clean.csv' table='[Casino Users Clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='UserProfileId' ordinal='1' />
            <column datatype='date' name='BirthDate' ordinal='2' />
            <column datatype='string' name='ZipCode' ordinal='3' />
            <column datatype='string' name='CountryName' ordinal='4' />
            <column datatype='string' name='Sex' ordinal='5' />
            <column datatype='datetime' name='Registration Date' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='integer' name='CountryId' ordinal='8' />
            <column datatype='string' name='StatusSysname' ordinal='9' />
            <column datatype='integer' name='Age' ordinal='10' />
            <column datatype='integer' name='MonthsMember' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Casino Users Clean.csv' table='[Casino Users Clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='UserProfileId' ordinal='1' />
              <column datatype='date' name='BirthDate' ordinal='2' />
              <column datatype='string' name='ZipCode' ordinal='3' />
              <column datatype='string' name='CountryName' ordinal='4' />
              <column datatype='string' name='Sex' ordinal='5' />
              <column datatype='datetime' name='Registration Date' ordinal='6' />
              <column datatype='string' name='City' ordinal='7' />
              <column datatype='integer' name='CountryId' ordinal='8' />
              <column datatype='string' name='StatusSysname' ordinal='9' />
              <column datatype='integer' name='Age' ordinal='10' />
              <column datatype='integer' name='MonthsMember' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Casino games.csv' table='[Casino games#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Casino_Provider' ordinal='0' />
              <column datatype='integer' name='UserID' ordinal='1' />
              <column datatype='integer' name='IsJackpotWinID' ordinal='2' />
              <column datatype='integer' name='IsFreeSpinID' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='integer' name='IsLiveID' ordinal='5' />
              <column datatype='real' name='Hold' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Customer Wallet Clean.csv' table='[Customer Wallet Clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='WalletActionId' ordinal='1' />
              <column datatype='integer' name='UserProfileId' ordinal='2' />
              <column datatype='integer' name='Type' ordinal='3' />
              <column datatype='string' name='TypeSysname' ordinal='4' />
              <column datatype='real' name='Amount' ordinal='5' />
              <column datatype='string' name='MethodSysname' ordinal='6' />
              <column datatype='datetime' name='Created' ordinal='7' />
              <column datatype='integer' name='Interval' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age]' value='[Casino Users Clean.csv].[Age]' />
          <map key='[Amount]' value='[Customer Wallet Clean.csv].[Amount]' />
          <map key='[BirthDate]' value='[Casino Users Clean.csv].[BirthDate]' />
          <map key='[Casino_Provider]' value='[Casino games.csv].[Casino_Provider]' />
          <map key='[City]' value='[Casino Users Clean.csv].[City]' />
          <map key='[CountryId]' value='[Casino Users Clean.csv].[CountryId]' />
          <map key='[CountryName]' value='[Casino Users Clean.csv].[CountryName]' />
          <map key='[Created]' value='[Customer Wallet Clean.csv].[Created]' />
          <map key='[Date]' value='[Casino games.csv].[Date]' />
          <map key='[F1 (Customer Wallet Clean.csv)]' value='[Customer Wallet Clean.csv].[F1]' />
          <map key='[F1]' value='[Casino Users Clean.csv].[F1]' />
          <map key='[Hold]' value='[Casino games.csv].[Hold]' />
          <map key='[Interval]' value='[Customer Wallet Clean.csv].[Interval]' />
          <map key='[IsFreeSpinID]' value='[Casino games.csv].[IsFreeSpinID]' />
          <map key='[IsJackpotWinID]' value='[Casino games.csv].[IsJackpotWinID]' />
          <map key='[IsLiveID]' value='[Casino games.csv].[IsLiveID]' />
          <map key='[MethodSysname]' value='[Customer Wallet Clean.csv].[MethodSysname]' />
          <map key='[MonthsMember]' value='[Casino Users Clean.csv].[MonthsMember]' />
          <map key='[Registration Date]' value='[Casino Users Clean.csv].[Registration Date]' />
          <map key='[Sex]' value='[Casino Users Clean.csv].[Sex]' />
          <map key='[StatusSysname]' value='[Casino Users Clean.csv].[StatusSysname]' />
          <map key='[TypeSysname]' value='[Customer Wallet Clean.csv].[TypeSysname]' />
          <map key='[Type]' value='[Customer Wallet Clean.csv].[Type]' />
          <map key='[UserID]' value='[Casino games.csv].[UserID]' />
          <map key='[UserProfileId (Customer Wallet Clean.csv)]' value='[Customer Wallet Clean.csv].[UserProfileId]' />
          <map key='[UserProfileId]' value='[Casino Users Clean.csv].[UserProfileId]' />
          <map key='[WalletActionId]' value='[Customer Wallet Clean.csv].[WalletActionId]' />
          <map key='[ZipCode]' value='[Casino Users Clean.csv].[ZipCode]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserProfileId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UserProfileId]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>UserProfileId</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BirthDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[BirthDate]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>BirthDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZipCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZipCode]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>ZipCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Registration Date]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>Registration Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryId]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>CountryId</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StatusSysname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StatusSysname]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>StatusSysname</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthsMember</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MonthsMember]</local-name>
            <parent-name>[Casino Users Clean.csv]</parent-name>
            <remote-alias>MonthsMember</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Casino_Provider</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Casino_Provider]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>Casino_Provider</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UserID]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>UserID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsJackpotWinID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsJackpotWinID]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>IsJackpotWinID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsFreeSpinID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsFreeSpinID]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>IsFreeSpinID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsLiveID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsLiveID]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>IsLiveID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hold]</local-name>
            <parent-name>[Casino games.csv]</parent-name>
            <remote-alias>Hold</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Customer Wallet Clean.csv)]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WalletActionId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WalletActionId]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>WalletActionId</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserProfileId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UserProfileId (Customer Wallet Clean.csv)]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>UserProfileId</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TypeSysname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TypeSysname]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>TypeSysname</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MethodSysname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MethodSysname]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>MethodSysname</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Created</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Created]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>Created</remote-alias>
            <ordinal>26</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interval</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Interval]</local-name>
            <parent-name>[Customer Wallet Clean.csv]</parent-name>
            <remote-alias>Interval</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserID:qk]&quot;' value='Count of Games' />
        </aliases>
      </column>
      <column caption='Age (bin) 2' datatype='integer' name='[Age (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='6' />
      </column>
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='7' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='ordinal' />
      <column caption='Birth Date' datatype='date' name='[BirthDate]' role='dimension' type='ordinal' />
      <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Is Free Spin ID' datatype='integer' name='[IsFreeSpinID]' role='dimension' type='ordinal' />
      <column caption='Is Jackpot Win ID' datatype='integer' name='[IsJackpotWinID]' role='dimension' type='ordinal' />
      <column caption='Is Live ID' datatype='integer' name='[IsLiveID]' role='dimension' type='ordinal' />
      <column caption='Method Sysname' datatype='string' name='[MethodSysname]' role='dimension' type='nominal' />
      <column caption='Months Member' datatype='integer' name='[MonthsMember]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column caption='Status Sysname' datatype='string' name='[StatusSysname]' role='dimension' type='nominal' />
      <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
      <column datatype='integer' name='[User Profile Id (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[UserProfileId]' peg='0' size='9285' />
      </column>
      <column caption='User ID' datatype='integer' name='[UserID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[UserProfileId (Customer Wallet Clean.csv)]' role='dimension' type='ordinal' />
      <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
      <column caption='Wallet Action Id' datatype='integer' name='[WalletActionId]' role='dimension' type='ordinal' />
      <column caption='Zip Code' datatype='string' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Casino Users Clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Casino games.csv' datatype='table' name='[__tableau_internal_object_id__].[Casino games.csv_DF85D7B9219B4A63A49F93E98756343C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Customer Wallet Clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38]' role='measure' type='quantitative' />
      <column-instance column='[UserID]' derivation='Count' name='[cnt:UserID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age (bin) 2]' derivation='None' name='[none:Age (bin) 2:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Age (bin) 2,Type Sysname)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Age (bin) 2:ok]' />
          <groupfilter function='level-members' level='[none:TypeSysname:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='CountryName, City'>
          <field>[CountryName]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Acharavi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Agia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Agnandero karditsas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alexandroupoli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ampelakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anw liosia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arkadikos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashby-de-la-zouch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Athens greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Axarnea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barton on sea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bhuuhui&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolsover&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Castleford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chatziliako&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chortiatis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Consett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cvhjj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deskati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elassona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Epworth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Farkadona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flintshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giannitsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grantham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton hargate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Heraklion crete gazi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horwich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ilioupoli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Istiaia evias&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kallithea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Karellas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kato poria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kettering&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kipseli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korudallos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Krithia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larisa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lisburn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loughborough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maleviziou&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mataragka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mesollogi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Millom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moschato&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naoussa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nea ionia volos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neapoli kozanis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New ash green&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nikea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paiania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parikia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Perea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pili&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Radwell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ruislip&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Selsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sikia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Skudras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southend on sea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stalbans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Storrington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tallaght&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thermaikos thessaloniki&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thornaby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Traxili&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Varnavas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vorizia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waterford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Weymouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xrusoupolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;-&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ag. konstantinos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agios dimitrios&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aitoliko&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amaliada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anixi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argiroupolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Artemis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asvestochori&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banchory&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beldast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blackpool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradford on avon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chalkidona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chios&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Co mayo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Creswell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deganwy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diss&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dudley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elliniko&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Evosmos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fili attikis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gavrio andros&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glufada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hailsham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hayle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hitchin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ialisos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraklio kritis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalamoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katerinh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Keighley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Killini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kordeliou evosmou&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kremasti rodou dodekanisou&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lagonisi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leicestershire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Likobrish&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Llanwrst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maesteg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marousi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meliki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mitilini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N.marmaras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nea chili&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nea penteli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neo psichiko&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newton aycliffe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nottinghamshire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ovria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panorama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pelasgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petroupoli athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitsea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poole&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pteleos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rethimno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romanos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saltley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shifnal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skegness&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South gloucestershire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St helens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stilida&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sutton st nicholas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tessaloniki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thessaloniki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tiverton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Verwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walsall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West parley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wirral&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xanthi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zografos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aberdeen city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ag. varvara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Agios konstantinos, agrinio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aldridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amfissa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anogia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arguroupoli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arxaia korinthos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Athen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Avlonas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barnsley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berwick northumberland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blyth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bridgend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burton on trent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carshalton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chapel brampton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cholargos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Codford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cullomptob&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dorset&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dundalk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egaleo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ennis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Exeter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Filoti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gerakas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gonni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Halstead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heraklio attikis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holyhead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Igoumenitsa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isleworth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kalithea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kapsali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kato achaia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keratsini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings lynn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korinhos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kria vrisi pelas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lancashire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leonidi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Limni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long ashton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Makrochori&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martonvásár&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Menidi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mikrokastro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaghan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nafplio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nea erithrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nea triglia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neochoropoulo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigrita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nyergesujfalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P.pendeli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paralia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Penrith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pikermi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plomari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portaferry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Purley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rhodes, dimilia &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rothienorman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scarborough&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shropshire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Skiathos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South yorkshire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stoke on trent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swindon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tewkesbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thetford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torquay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Varda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virwnas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weston super mare&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Witney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xios&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Acharnes iraklii&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Agia varvara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Agrinio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alfreton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anatoli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Appleton thorn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arklow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashtead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Athina/metamorfossi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bagilt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birchington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Borehamwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camberley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chaddesden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chepstow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Church lench, evesham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cork city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dafni&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diavata thessaloniki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East kilbride&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleousa ioannina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erithres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faversham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Foxton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gipsochori&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greater london&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harrogate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hraklio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imittos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalonero&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karpenisi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Katw axais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kifisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kirkwall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Koufalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ksilokastro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lavrion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leukakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loutra aidipsou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mantoudi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mazi aliartou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Messini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mirfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mountain ash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nea agchialos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nea lampsakos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North yorkshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orestiada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palaiokomi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pastida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perivolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Piperia aridaias&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poligiros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prestatyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ratoath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rizia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Siros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solihull&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sparti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stathmos larisis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Strachur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tauronitis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thesalonika&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thrapsano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trilofia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vasiliko xalkidos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vrastama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Welwyn garden city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wickham bishops&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Worthing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ymittos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Acharnae&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Agia anna evias&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Agnantero karditsas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandroupolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ampelokhpi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Apalos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arkalochori&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atherstone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Axarnes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basildon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biggleswade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bolton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brighton and hove&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caerphilly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Castletown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheadle hulme&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chrisoupoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cwmbran (gwent)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draperstown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dursley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elefsina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eretria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farnborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Giannouli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grat yarmouth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Handforth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heraklion, crete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houghton le spring&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ilioupolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Itea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kalloni&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Karlobasi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Katochi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiriaki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korudalos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kritsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larissa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesmahagow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Litochoro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loughgall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mataragka aitoloakarnaniaa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mesologgi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moshato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Naupaktos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nea iwnia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neapoli thessaloniki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New edlington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nikisiani kavalas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olimpiako xwrio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paignton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paros&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Perigiali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pili trikalwn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Polichni&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poullakida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rafhna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Runcorn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Selston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stalybridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stoupa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tallaght, dublin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thermi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thornborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Treorchy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vartholomio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Voula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterlooville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whitchurch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Worcestershire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Xwra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aberdeenshire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aganargiri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Agios nicolaos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aleksandroupolh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amintaio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anthousa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aridaia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arxontoxwri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Axaia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barnstaple&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berwick upon tweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bodmin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bridgnorth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burton-on-trent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Castlebar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chapel-en-le-frith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chora samou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colchester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cullybackey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derbyshire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egervölgy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Enniskillen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Exochi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finikas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Geraki lakonias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Goole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hambleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heraklion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holywell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ikaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Islington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kalithies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Karavomilos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kato neochoropoulo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kerkira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kingston upon thames&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korinos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kria-vrissi pellas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leonidio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limnos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Longbridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Makroxori&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maryport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Merseyside&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mikromani&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Naipaktos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nea filadelfia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neapolh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neos kosmos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nikaia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Offaly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P.tsifliki kabalas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paralia pantelimon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Penteoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pilaia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plymotch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rhodes, ialisos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roumeli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scunthorpe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Siatista&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skidra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Staffordshire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stoke-on-trent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swinton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thassos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toulestrane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Varh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vlasika&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warrington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Weston-super-mare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wokingham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Xirovrisi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ag. dimitrios&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Agios dhmhtrios&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aigira&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Almiros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angus council&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Argiroupolh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Artemida&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aspropurgo s&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Attiki&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Banbridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedlington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bishops stortford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bracknell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canvey island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chalkida&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester le street&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crediton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dartford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dilesi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drosia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edessa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ellhniko&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Euosmos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fife&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastouni&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glika nera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guildford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haverfordwest&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huntly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraklio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalamata&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kaminia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kastro killinis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kefallonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kilkis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Komothnh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kranea elassonas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lagkadas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lefkada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lightwater&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Llangernyw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lymington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markopoulo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Megara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michaniona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mitilene&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N.ionia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nea artaki&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nea michaniona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neo karlovasi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nottingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orxomenos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pallini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pefki&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Petripoli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pirgos ilias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pontyclun (mid glamorgan)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Psaxna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Regini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rodos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saltash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shepshed, leicestershire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skala lakwnias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sourwth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St albans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stenhousemuir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunny&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Templemore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thessalonikh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tiros arkadias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turnavos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vergina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West midlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wingate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xalkidiki&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zigolatio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abelonas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ag. nikolaos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agios georgios feron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aitolokarnania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarinthos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anlaby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Artemisio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atalanti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aulida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belfast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blackwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon suffolk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burnopfield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carlow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chandras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippenham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coalville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crewe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dendrochori&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Distomo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dumbarton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edwinstowe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elounda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Evropos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Filiatra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gazi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Godalming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halastra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hlioupoli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ialisos, rodos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraklion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalampaka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kantza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katerini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kekira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kilmarnock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koridallo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Krestena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lakki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leighton buzzard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Likobrisi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lofiskos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maidenhead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marousi, athens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Melisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middleton in teesdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mixairado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nea epidauros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nea peramos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Neo risio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newtownabbey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Notts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papafio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pella&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pickering&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plaistow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ptolemaida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rethmno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shirebrook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Skelmersdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South lanarkshire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stirling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Test&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thessaloniki epanomi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ton pentre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Undy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vevi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Walsingham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West sussex&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wisbech&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Xeropotamos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zografou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Afantou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Agii theodori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aigina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aliveri evia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anemotia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Argalasti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aspropirgos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Attikh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ballymena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beccles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Birtley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brachati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cannock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chalandritsa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheshire west and chester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cleckheaton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cradley heath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Didimoticho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drogheda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ebbw vale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elisina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ermpoupoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Feres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Galatsi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Glasgow city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greystones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hastings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hidra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huddersfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ioannina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalamaki achaia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kamatero,athens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kastorias&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kavros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kilkeel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kolindros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kozanh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;L.aidhpsi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lecheo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libadia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Llandudno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lucan co dublin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Megalopoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Metamorphosis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missolonghi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mutilhnh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nea anchialos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nea makrh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Neo hraklio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newcastle upon tyne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northwich  cheshire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oropos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paleo faliro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pazinos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peterborough&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pireaus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Polukastro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Proti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Redditch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rodod&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salisbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheerness&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sivota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Soufli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spennymoor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stavroupoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tayport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tullamore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Velo korinthias&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vrontados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West byfleet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wimborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xaidari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zefiri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Abergele&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Agatha imathias&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Agios nikolaos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandrapolis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ammanford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antirrio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aridea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ascot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Axarnai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beverley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bognor regis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bridgwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castlebridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chorio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coleford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cumbernauld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downham market&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dunfermline&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Epanomi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fallin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Firni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gerontas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gosport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heraklion creta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Horley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ilfracombe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isthmia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Karditsa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kato patisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kesariani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiparissia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korinthos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Krieza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Langley moor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Longford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maleme&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mastichari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Merthyr tydfil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milbrook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nea fokea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neapoli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoxori mesologgiou&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nikaia larisas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oinoussa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pagkrati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paramithia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peraia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pilaia thessaloniki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Porto rafti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raahe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhodos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rovaniemi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seaham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sidcup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skoura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stoke-ontrent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sximatari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thatcham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thirsk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Town&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warwickshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westyorkshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wolverhampton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Xolargos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Achillio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Agiaparaskevi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aharnes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aliartos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anavissos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Araxnaio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Armadale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashton under lyne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Athy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baginton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bathgate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Birkenhead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bromley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Camborne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chaidari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chersonisos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clacton on sea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cornwall&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dagenham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Diavatos imathias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drepano&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East sussex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eleusina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ermioni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Felixstowe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frodsham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Githio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greater manchester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hertfordshire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hraklio krhths&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ince-in-makerfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kahala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalumnos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karteros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Katw pathsia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kifisia, attiki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kissamos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Koufalia thessalonikis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ksiromerou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lavrium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leukimmi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Loutra edipsou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maramri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Measham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metamorfosi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mirina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mouzaki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nea agxialos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nea lampsakos chalkidas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newbridge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ori&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palairos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Perki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piraeus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Polikastro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rct&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salamima&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Servia, kozani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sitia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spata loutsa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stathmos mourion, kilkis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stratoni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tauros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thesalonikh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tichero&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trilofos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vathi samos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vrilissia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wembley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wicklow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aegaleo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Agii anargiri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aigaleo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alimos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Archaia korinthos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arnea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Askos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bagionia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bathi aulidos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Birmigham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boston united kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bromsgrove&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chaidari athina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chesham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;County durham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dalmeny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diavolitsi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drimos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eastbourne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eleutheroupoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ermioni argolidas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Felsőpetény&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furzton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gizh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hartlepool&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Herts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hrakliou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Inverclyde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kaisariani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kamatero&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kastellani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kavala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kifissia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Klidi imathias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kounavi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuparissia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leamington spa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Levadia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lixouri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loutraki&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marathonas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Metamorfosi attikis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mirtia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mullingar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nea agxialos voli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nea liosia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nemea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northamptonshire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Orkeny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patra achaias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pershore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Piraias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Polistilon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prestonpans&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salamina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sevenoaks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sittigbourne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sosti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spathades&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stauroupoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Strefi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taverham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thesaloniki&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timpaki&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tripoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vathi samou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vrillisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West bridgford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wigan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wrexham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zacarw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ag anargiri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Agionori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aigio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alloa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Angmering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Argiroupili&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artaki&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspropugos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Attikhs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ballynahinch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bishops itchington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brackley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bucksburn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chalastra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleethorpes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crawley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Didimotixo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dronfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eccles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ellesmere port&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fermanagh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Glifada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grimsby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Havant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High wycombe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hull&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ipswich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalamaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kamena vourla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kastri viannou&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kedra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kilkenny&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kollivas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kozani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lagadas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leeds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lifford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Llanelli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Market drayton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Megaplatanos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Metsmorfosi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitikas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mwlos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nea artakh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nea makri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neo iraklio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orpington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paleochora&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Petinos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pirgos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pontefract&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Psachna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redhill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rodolivos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saloniki&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheffield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sourpi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Srivos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stefanovikio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Telford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thessalonik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tirnavos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunbridge wells&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Velvento&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West lothian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Windermere&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xalandri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zefuri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ag. ioannis rentis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Agios dimitios&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ailonari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almuros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aniksi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argiroupoli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Artemida , vravrona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Assos korinthias&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Attikis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedworth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blackburn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burgess hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cardiff&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chalkidiki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clonmagadden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cressing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deeside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dimotiko diamerisma agiou dimitriou kozanis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edgware&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ellhs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evesham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fili&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gateshead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haidari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hayes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hindhead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hythe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraklio attikis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalamats&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kampos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katastari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kefalonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Killarney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Komotini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kremasti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lagkadikia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leicester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ligourio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Llanrhystud&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mablethorpe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Markopoulo mesogeas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meligalas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middlesbrough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitilhmh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N.iraklio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nea chalkidona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nea moudania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neo petritsi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newry, mourne and down&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nottinghamn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oswaldtwistle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paloukia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pelargos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petroupoli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pithagorio samou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pontypridd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Psichiko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Renfrewshire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rogitika&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saltcoats&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sherburn in elmet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skaramagkas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South benfleet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St austell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stevenage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Surrey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terpsithea larisas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thessaloníki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tithorea fthiotidas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyne and wear&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Veria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallasey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West molesey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Winsford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Xanion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zipari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Acharnai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Agia paraskeui&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alexandrupoli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ampelokipi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Apolakkia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arkalochori irakliou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Athina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aylesbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Basilika&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Billingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonitsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brilissia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Callington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Catford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chelmsford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christchurch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corfu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D. ferwn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dewsbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drapetsona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eleftherio kordelio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eretria farsalon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Farnham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flwrina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harlow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hereford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hounslow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ilkley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivybridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kallthiea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Karlovasi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Katw achaia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kidderminster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkby in ashfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korwpi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Krousonas heraklion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Larkhall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesvos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Littlehampton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lousika&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maurommation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mesolonghi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milton keynes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mosxato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Navan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nea kallikratia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neapoli, thessaloniki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New moudania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omagh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paisley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peristeri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pillmere, saltash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Polidroso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prenton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rafina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rushden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sepolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Simi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southsea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stamata&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stourbridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tarsina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thermo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thorne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Triandria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vasilika&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vourliotes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whitehaven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Workington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yarcombe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Acarnai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aghia paraskevi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Agios pavlos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amorgos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arjuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ashbourne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Athens / agii anarguri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Axarne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barrow-upon-humber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bexhill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brighouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bury st. edmunds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castlederg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chatteris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chorley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coleraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cumbria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desfina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Doxato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dunstable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Epsom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Farehan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fitzwilliam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Geroplatanos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Heraklion crete&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Horsham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ilion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Istiaia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Karditsomagoula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kato patissia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Keswick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kipi evvias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Koropi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Krioneri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laois&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leptokaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincolnshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lostock gralam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malesina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mataraga karditsas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mesaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morecambe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naousa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nea ionia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Neapoli bion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nether stowey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nikaias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okehampton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pagrati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Perama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pilea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Polegate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portslade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Radcliffe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rhonnda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Selby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sikamino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skudra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stairipoli thessalonikis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sέrres&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thebes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thiva&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tramore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Varkiza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vonitsa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Warwixk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wombourne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xora naxos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aberbargoed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ag. paraskevi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agios ioannis rentis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aksioupoli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amfiklia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Annabissos arttiki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argos-mikines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arundel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ath&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avhna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangor (gwynedd)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blaenau gwent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brentford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burntwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carrick on suir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chipping norton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coatbridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croydon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doncaster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dumfries&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Efkarpia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eluru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ewloe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Filippiada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gennadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Godley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Halesowen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hemel hempstead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holargos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iasmos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraklion creta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalavrita&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kapadriti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katheni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kimi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Koridallos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Krestena hlias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lamia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leixlip&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Likovrisi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maidstone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maroussi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melissia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Midleton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Molai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nafpakto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nea epidavros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nea potidaia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neochori mesologgiou&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newtownards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ntrafi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oxfordshire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papagos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pelopio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pigadia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plataria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Port glasgow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pulaia thessaloniki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Reuimno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roterham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sapes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shotts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South molton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. austell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swansea (west glamorgan)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Test area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thessaloniki sikies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Torbay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uxbridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Viotias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waltham cross&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West yorkshire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wishaw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Xiliomodi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zwgrafou&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aegina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Agii deka, crete&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aigalew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aliveri&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andravida&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Archanes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arnold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspopirgos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Attali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ballintogher&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bdbdb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broseley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambridgeshire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chalandri&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claremorris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coventry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dalry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Didcot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Driovouno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eastleigh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elgin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ermoupoli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Feltham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Galatas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Glasgow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grevena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harwich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Heywood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hucclecote&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Inverness&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kalabrita&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamatero athens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kastoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kavalas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kilcullen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kokkini hani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kounoupidiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kws&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lechaina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexaio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Llandrindod wells&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Megali panagia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Metamorfwsi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mirtos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murina limnos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nea alikarnassos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nea magnhsia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nenagh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ormskirk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perth and kinross&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pireas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Politika&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Preveza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Redcar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sfsdfsd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sittingbourne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Souda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spathari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stavros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stulida&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tavros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thesprotiko&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tinos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Truro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Velissarios&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vrillissia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West bromwich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilmslow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wythenshawe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zakinthos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Acharnes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Agia paraskevi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Agria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amuntaio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Appiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arkasades&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Athina, zografou&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bacup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basingstoke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bilston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bordon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cavan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cheltenham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chrusoupoli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D. kilkis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Diabata&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Draviskos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Earby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eleochori&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Farsala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Folkestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gimno eretrias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grays&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harold park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herne bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hove&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ilon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iwannina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalochori&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karpathos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Katw axaias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kidwelly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kirkham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ksanthi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lavrio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Letterkenny&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Livadia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Loutra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mandra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mesopotamia kastorias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mires&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Motherwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Naxos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nea koutali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near smurni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New stevenston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North lanarkshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oraiokastro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palaio faliro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Partington, manchester.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peristeri, attiki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pilos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Polidrosos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prescot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ramsgate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rizari edessas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serifos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sindos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sofades&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stamna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stowmarket&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taunton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thesalonik&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thrakomakedones&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trikala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vasiliko&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vrachati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wellingborough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wickford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worksop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yeovil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ag. stefanos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Agios konstantinos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alairtos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amfiloxia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ano liosia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argostoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arxaggelos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Athe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avlona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barnetby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blairgowrie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carrickfergus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chania,crete&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chiselhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cockett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuffely&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dunboyne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Efura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emporio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Exarchia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Filiro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Geraka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Godstone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heraclion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holbeach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ierapetra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of wight&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalimnos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kapandriti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kathiana akrotiriou nomou xaniwn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keratea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Koridalos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kria vrisi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lamia, stilida&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Limerick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Londonderry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Makri gialos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Menemeni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mikonos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molos agios konstantinos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nafpaktos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nea erithraia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nea smirni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neochori mirtountion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ni epivates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuneaton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P. faliro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Par&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pika&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port talbot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Purgos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rhodes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rotherham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sappes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shrewsbury&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Skelton in cleveland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South shields&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. leonards-on-sea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swanton morley, dereham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Testciti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thessaloniki-euosmos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Torfaen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vagia thivon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vironas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wantage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westerham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Witham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Xilokastro&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CountryName:nk]&#10;[none:TypeSysname:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Casino_Provider:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;PlayNGo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edict&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MicroGaming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skywind&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PlayTech&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NetEnt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Evolution&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nyx&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PragmaticPlay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oryx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EvolutionDirect&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RedTiger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iforium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Casino Users Clean.csv' id='Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08'>
            <properties context=''>
              <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Casino Users Clean.csv' table='[Casino Users Clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='UserProfileId' ordinal='1' />
                  <column datatype='date' name='BirthDate' ordinal='2' />
                  <column datatype='string' name='ZipCode' ordinal='3' />
                  <column datatype='string' name='CountryName' ordinal='4' />
                  <column datatype='string' name='Sex' ordinal='5' />
                  <column datatype='datetime' name='Registration Date' ordinal='6' />
                  <column datatype='string' name='City' ordinal='7' />
                  <column datatype='integer' name='CountryId' ordinal='8' />
                  <column datatype='string' name='StatusSysname' ordinal='9' />
                  <column datatype='integer' name='Age' ordinal='10' />
                  <column datatype='integer' name='MonthsMember' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Casino games.csv' id='Casino games.csv_DF85D7B9219B4A63A49F93E98756343C'>
            <properties context=''>
              <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Casino games.csv' table='[Casino games#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Casino_Provider' ordinal='0' />
                  <column datatype='integer' name='UserID' ordinal='1' />
                  <column datatype='integer' name='IsJackpotWinID' ordinal='2' />
                  <column datatype='integer' name='IsFreeSpinID' ordinal='3' />
                  <column datatype='date' name='Date' ordinal='4' />
                  <column datatype='integer' name='IsLiveID' ordinal='5' />
                  <column datatype='real' name='Hold' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Customer Wallet Clean.csv' id='Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38'>
            <properties context=''>
              <relation connection='textscan.1e9qiny1tc8kk612ri36j1c2jf1d' name='Customer Wallet Clean.csv' table='[Customer Wallet Clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='WalletActionId' ordinal='1' />
                  <column datatype='integer' name='UserProfileId' ordinal='2' />
                  <column datatype='integer' name='Type' ordinal='3' />
                  <column datatype='string' name='TypeSysname' ordinal='4' />
                  <column datatype='real' name='Amount' ordinal='5' />
                  <column datatype='string' name='MethodSysname' ordinal='6' />
                  <column datatype='datetime' name='Created' ordinal='7' />
                  <column datatype='integer' name='Interval' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[UserProfileId]' />
              <expression op='[UserID]' />
            </expression>
            <first-end-point object-id='Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08' />
            <second-end-point object-id='Casino games.csv_DF85D7B9219B4A63A49F93E98756343C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[UserProfileId]' />
              <expression op='[UserProfileId (Customer Wallet Clean.csv)]' />
            </expression>
            <first-end-point object-id='Casino Users Clean.csv_305AEA8D637C41A1A865F315ADAC7B08' />
            <second-end-point object-id='Customer Wallet Clean.csv_77939C585AD44DF185AF3E70EA8C3A38' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Casino Provides by Games and Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column caption='User ID' datatype='integer' name='[UserID]' role='dimension' type='ordinal' />
            <column-instance column='[UserID]' derivation='Count' name='[cnt:UserID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserID:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserID:qk]' scope='rows' value='Count of Games' />
            <format attr='title' class='0' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' scope='rows' value='Profit' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]' value='132' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' value='148' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C5D0C611-6A43-4530-BBF5-212029ABDE8D}' />
    </worksheet>
    <worksheet name='Free Spin per Casino'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column caption='Is Free Spin ID' datatype='integer' name='[IsFreeSpinID]' role='dimension' type='ordinal' />
            <column caption='User ID' datatype='integer' name='[UserID]' role='dimension' type='ordinal' />
            <column-instance column='[UserID]' derivation='Count' name='[cnt:UserID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IsFreeSpinID]' derivation='None' name='[none:IsFreeSpinID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserID:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsFreeSpinID:ok]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsFreeSpinID:ok]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{142B3AE0-DA02-4E18-9FDB-6E7DEB8A3548}' />
    </worksheet>
    <worksheet name='Hours wih more Registrations'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='datetime' name='[Registration Date]' role='dimension' type='ordinal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='CountD' name='[ctd:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Registration Date]' derivation='Hour' name='[hr:Registration Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[hr:Registration Date:ok]</cols>
      </table>
      <simple-id uuid='{724AB4D3-E77C-436B-825A-73356A08C9E0}' />
    </worksheet>
    <worksheet name='Hours with most Transactions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='datetime' name='[Created]' role='dimension' type='ordinal' />
            <column caption='Wallet Action Id' datatype='integer' name='[WalletActionId]' role='dimension' type='ordinal' />
            <column-instance column='[WalletActionId]' derivation='CountD' name='[ctd:WalletActionId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Created]' derivation='Hour' name='[hr:Created:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:WalletActionId:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[hr:Created:ok]</cols>
      </table>
      <simple-id uuid='{022A4C8B-824D-4E98-91CB-EA0D2D93DA77}' />
    </worksheet>
    <worksheet name='Jackpots per Casino Games'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column caption='Is Jackpot Win ID' datatype='integer' name='[IsJackpotWinID]' role='dimension' type='ordinal' />
            <column caption='User ID' datatype='integer' name='[UserID]' role='dimension' type='ordinal' />
            <column-instance column='[UserID]' derivation='Count' name='[cnt:UserID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IsJackpotWinID]' derivation='None' name='[none:IsJackpotWinID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserID:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsJackpotWinID:ok]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsJackpotWinID:ok]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A882E025-4F15-4B47-9B72-613145AD97B5}' />
    </worksheet>
    <worksheet name='Live Events per Casino'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column caption='Is Live ID' datatype='integer' name='[IsLiveID]' role='dimension' type='ordinal' />
            <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[IsLiveID]' derivation='None' name='[none:IsLiveID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsLiveID:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</cols>
      </table>
      <simple-id uuid='{3B7E67D6-0F85-463B-966D-ECB9E2880E14}' />
    </worksheet>
    <worksheet name='Most Popular Casino Game'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='User ID' datatype='integer' name='[UserID]' role='dimension' type='ordinal' />
            <column-instance column='[UserID]' derivation='CountD' name='[ctd:UserID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CountryName:nk]' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserID:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</cols>
      </table>
      <simple-id uuid='{6F557960-3400-49F8-9B1A-A3A9A7FEB106}' />
    </worksheet>
    <worksheet name='Most Profitable Casino Game'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</cols>
      </table>
      <simple-id uuid='{66621056-5FE1-4C85-83D2-A7E1FD9D3AD0}' />
    </worksheet>
    <worksheet name='Payment Methods'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Method Sysname' datatype='string' name='[MethodSysname]' role='dimension' type='nominal' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column-instance column='[MethodSysname]' derivation='None' name='[none:MethodSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:MethodSysname:nk]</cols>
      </table>
      <simple-id uuid='{65ACA0E2-9BF3-4C0D-A394-964C6FDA8B84}' />
    </worksheet>
    <worksheet name='Profit Casino Games over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column-instance column='[Hold]' derivation='Sum' forecast-column-base='[sum:Hold:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Hold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[fVal:sum:Hold:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='90.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='true' trend-type='ets-none' />
      </table>
      <simple-id uuid='{536979FA-23CA-4A22-A665-DB6D0D2F9864}' />
    </worksheet>
    <worksheet name='Profit Casino Games per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Casino Provider' datatype='string' name='[Casino_Provider]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Hold]' role='measure' type='quantitative' />
            <column-instance column='[Casino_Provider]' derivation='None' name='[none:Casino_Provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hold]' derivation='Sum' name='[sum:Hold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CountryName:nk]' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' value='156' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e0404</color>
                <color>#a31212</color>
                <color>#a82222</color>
                <color>#ae3232</color>
                <color>#b34444</color>
                <color>#b85656</color>
                <color>#be6969</color>
                <color>#c37e7e</color>
                <color>#c89393</color>
                <color>#cea9a9</color>
                <color>#d3c0c0</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Hold:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk] / [federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{65093728-DF63-43FA-8A2A-9DA5BABE37B9}' />
    </worksheet>
    <worksheet name='Top 15 Users by Months Member'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Book'>Top 20 Users by Membership </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Months Member' datatype='integer' name='[MonthsMember]' role='measure' type='quantitative' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserProfileId]' derivation='None' name='[none:UserProfileId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[MonthsMember]' derivation='Sum' name='[sum:MonthsMember:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([MonthsMember])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:UserProfileId:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' />
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:MonthsMember:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:MonthsMember:qk]</cols>
      </table>
      <simple-id uuid='{3895C897-C8DE-4FE9-BB23-69E800403821}' />
    </worksheet>
    <worksheet name='Top 20 Customer by Deposit Frequency (Days)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='integer' name='[Interval]' role='measure' type='quantitative' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column datatype='integer' name='[UserProfileId (Customer Wallet Clean.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Interval]' derivation='Avg' name='[avg:Interval:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserProfileId (Customer Wallet Clean.csv)]' derivation='None' name='[none:UserProfileId (Customer Wallet Clean.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[avg:Interval:qk]' included-values='in-range'>
            <min>0.0018</min>
            <max>0.076923076923076927</max>
          </filter>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]'>
            <groupfilter function='member' level='[none:TypeSysname:nk]' member='&quot;DEPOSIT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]'>
            <groupfilter count='30' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Interval])' function='order' user:ui-marker='order'>
                <groupfilter expression='AVG([Interval]) &gt; 0.014999999999999999' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:UserProfileId (Customer Wallet Clean.csv):ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[avg:Interval:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</column>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]</column>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[avg:Interval:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[avg:Interval:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]</cols>
      </table>
      <simple-id uuid='{D25ED16F-DC21-42BB-8506-B210E05764B4}' />
    </worksheet>
    <worksheet name='Top 20 Customers by Total Money '>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[UserProfileId (Customer Wallet Clean.csv)]' role='dimension' type='ordinal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserProfileId (Customer Wallet Clean.csv)]' derivation='None' name='[none:UserProfileId (Customer Wallet Clean.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='None' name='[none:UserProfileId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Amount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:UserProfileId:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]</cols>
      </table>
      <simple-id uuid='{50762828-4416-4AC3-8588-DBE38729FB7D}' />
    </worksheet>
    <worksheet name='Total Number of Users'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Status Sysname' datatype='string' name='[StatusSysname]' role='dimension' type='nominal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='Count' name='[cnt:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StatusSysname]' derivation='None' name='[none:StatusSysname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserProfileId:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserProfileId:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserProfileId:qk]</cols>
      </table>
      <simple-id uuid='{ADE6118E-BCC0-4C7F-A408-B0FD590C33EC}' />
    </worksheet>
    <worksheet name='Total Profit Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Created]' role='dimension' type='ordinal' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' forecast-column-base='[sum:Amount:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Created]' derivation='Day-Trunc' name='[tdy:Created:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[fVal:sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[tdy:Created:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='90.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{C71454AF-F729-48EA-B029-3C2B1AC52AC0}' />
    </worksheet>
    <worksheet name='Trancastions by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column caption='Wallet Action Id' datatype='integer' name='[WalletActionId]' role='dimension' type='ordinal' />
            <column-instance column='[WalletActionId]' derivation='Count' name='[cnt:WalletActionId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:WalletActionId:qk]' />
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:WalletActionId:qk]' />
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Count of Transactions: &lt;</run>
                <run>[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:WalletActionId:qk]</run>
                <run>&gt;&#10;Amount of Money: &lt;</run>
                <run>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E1E572F9-5D42-42F1-A41E-D4724F518A25}' />
    </worksheet>
    <worksheet name='Transaction by Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Age (bin) 2' datatype='integer' name='[Age (bin) 2]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='6' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='ordinal' />
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column-instance column='[Age (bin) 2]' derivation='None' name='[none:Age (bin) 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Exclusions (Age (bin) 2,Type Sysname)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Age (bin) 2:ok]' />
                <groupfilter function='level-members' level='[none:TypeSysname:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Age (bin) 2:ok]' member='20' />
                <groupfilter function='member' level='[none:TypeSysname:nk]' member='&quot;DEPOSIT&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age (bin) 2:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age (bin) 2:ok]' />
              <groupfilter function='member' level='[none:Age (bin) 2:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[Exclusions (Age (bin) 2,Type Sysname)]</column>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age (bin) 2:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age (bin) 2:ok]</cols>
        <show-full-range>
          <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[Age (bin) 2]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{6575D307-B60A-4626-8AE5-9F612E72FAE6}' />
    </worksheet>
    <worksheet name='Transaction by Sex'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sex:nk]' />
              <groupfilter function='member' level='[none:Sex:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</cols>
      </table>
      <simple-id uuid='{52CC1AB4-6773-43F1-956A-75E3001C68AD}' />
    </worksheet>
    <worksheet name='Transactions Per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='real' name='[Amount]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Type Sysname' datatype='string' name='[TypeSysname]' role='dimension' type='nominal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[TypeSysname]' derivation='None' name='[none:TypeSysname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CountryName:nk]' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</cols>
      </table>
      <simple-id uuid='{4F4215A9-ABB7-4F78-8F70-C20E5B89A4D1}' />
    </worksheet>
    <worksheet name='Users Per City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='CountD' name='[ctd:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([UserProfileId])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:City:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E73CC369-BABC-410A-AA2A-167644BD2F12}' />
    </worksheet>
    <worksheet name='Users by Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='integer' name='[Age]' role='measure' type='ordinal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='Count' name='[cnt:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[cnt:UserProfileId:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age:ok]</cols>
        <show-full-range>
          <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[Age (bin)]</column>
          <column>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:User Profile Id (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{1A1ED52D-6033-4993-95EF-3F264BD7B02A}' />
    </worksheet>
    <worksheet name='Users by Reg Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[Registration Date]' role='dimension' type='ordinal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='CountD' name='[ctd:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Registration Date]' derivation='Month-Trunc' name='[tmn:Registration Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[tmn:Registration Date:qk]</cols>
      </table>
      <simple-id uuid='{093F5C69-E0AB-4A1E-B383-BD949701554C}' />
    </worksheet>
    <worksheet name='Users by Sex'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='CountD' name='[ctd:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' />
              <text column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' />
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F8EC0FDE-4D1D-40AB-A717-D51DA067B3CA}' />
    </worksheet>
    <worksheet name='Users per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Casino Users Clean+' name='federated.0oawgx50w7lkkq14r800u0z1aolk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oawgx50w7lkkq14r800u0z1aolk'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='User Profile Id' datatype='integer' name='[UserProfileId]' role='dimension' type='ordinal' />
            <column-instance column='[UserProfileId]' derivation='CountD' name='[ctd:UserProfileId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Longitude (generated)]' field-type='quantitative' max='28886820.882989775' min='-21746366.656043518' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Latitude (generated)]' field-type='quantitative' max='16075611.809294637' min='-11345870.356621407' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' />
              <color column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' />
              <geometry column='[federated.0oawgx50w7lkkq14r800u0z1aolk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='190' />
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oawgx50w7lkkq14r800u0z1aolk].[Latitude (generated)]</rows>
        <cols>[federated.0oawgx50w7lkkq14r800u0z1aolk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F5E20D79-99E0-4398-9638-F0FFFF9C05D3}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Users per Country'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6AB3B3EC-D9EF-464A-B4D1-578EA067F5E2}' />
    </window>
    <window class='worksheet' name='Users Per City'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[attr:City:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:City:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0AEAE519-8AB1-4644-8C69-59BB4C4832B0}' />
    </window>
    <window class='worksheet' name='Users by Reg Date'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Registration Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED994336-ABD3-46FF-9818-C7176617C2CB}' />
    </window>
    <window class='worksheet' name='Users by Sex'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[ctd:UserProfileId:qk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6464FAB9-39FB-4F12-B190-8D2D97131757}' />
    </window>
    <window class='worksheet' name='Users by Age'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age (bin):ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age:qk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:User Profile Id (bin):qk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Age:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF7BFF11-9B5E-4D6E-AEB0-C8071A1E9A77}' />
    </window>
    <window class='worksheet' name='Top 15 Users by Months Member'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F499EC50-8068-4370-A68D-9B18881C8FF3}' />
    </window>
    <window class='worksheet' name='Hours wih more Registrations'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Registration Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75A4FB0A-22D4-49F1-80E4-58861B8A980C}' />
    </window>
    <window class='worksheet' name='Transactions Per Country'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='185'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:MethodSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Type:qk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6F533B97-42BF-41BE-9C8D-66BC2830C2FE}' />
    </window>
    <window class='worksheet' name='Transaction by Sex'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:MethodSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D7B975B-452A-4420-8821-6BFB6102F4A7}' />
    </window>
    <window class='worksheet' name='Total Profit Over Time'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]&#10;[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Forecast Indicator:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Created:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0B3F881-4C25-43DD-9ED1-1D35CA7249C2}' />
    </window>
    <window class='worksheet' name='Payment Methods'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:MethodSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DA1B21B-9DE6-485E-934D-52149A6880A5}' />
    </window>
    <window class='worksheet' name='Top 20 Customer by Deposit Frequency (Days)'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Sex:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5FAB71F-6434-4CEC-8BDD-319C04874A30}' />
    </window>
    <window class='worksheet' name='Top 20 Customers by Total Money '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId (Customer Wallet Clean.csv):ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserProfileId:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFD9A65A-5A66-4D76-90AD-CA4FB8E0DCBF}' />
    </window>
    <window class='worksheet' name='Most Popular Casino Game'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C007933-1D9C-47A3-8EFC-9CB1E517CF4D}' />
    </window>
    <window class='worksheet' name='Most Profitable Casino Game'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DDDE779-D417-4A28-B1DB-218E1410F255}' />
    </window>
    <window class='worksheet' name='Casino Provides by Games and Profit'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB647740-529E-4E87-B298-8DCF93A033AE}' />
    </window>
    <window class='worksheet' name='Profit Casino Games over Time'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{753B0F38-EA76-44CD-A240-FF919497B72D}' />
    </window>
    <window class='worksheet' name='Profit Casino Games per Country'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:City:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:CountryName:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DF178326-ECBF-4BDC-8C35-03C6D5EE679F}' />
    </window>
    <window class='worksheet' name='Hours with most Transactions'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:WalletActionId:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Created:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7A0AF72-606B-4DB2-A543-332AB2595F17}' />
    </window>
    <window class='worksheet' name='Jackpots per Casino Games'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsJackpotWinID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7614C7C-D75F-4FF9-BDA1-018633805E13}' />
    </window>
    <window class='worksheet' name='Live Events per Casino'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsLiveID:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsLiveID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBEA5802-00F1-4413-A7AE-9690AA3D1BCA}' />
    </window>
    <window class='worksheet' name='Free Spin per Casino'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Casino_Provider:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:IsFreeSpinID:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:UserID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D23F160-3284-4A77-8020-424F390652EB}' />
    </window>
    <window class='worksheet' name='Total Number of Users'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:StatusSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:User Profile Id (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6A2328B-82E9-4EA1-876A-29664692A415}' />
    </window>
    <window class='worksheet' name='Trancastions by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:WalletActionId:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[sum:Amount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEA35507-4CF7-4388-9EEC-F60BFA174DEA}' />
    </window>
    <window class='worksheet' maximized='true' name='Transaction by Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:Age (bin) 2:ok]</field>
            <field>[federated.0oawgx50w7lkkq14r800u0z1aolk].[none:TypeSysname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEBCCFE9-8209-4809-B84C-1EAD1B112767}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Casino Provides by Games and Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z4AcxbW//fTEnbQ556yN0q7yKiMJBZAAAQIhMBgwXLDx63CdfY19ff23
      fZ2uA9ggolBACeWcc15t0GpzznlnJ+d+P6wkVkiyRiZb83za7amuqe6p032qzqlfCaIoivjw
      cYci+bwb4MPH54nPAHzc0fgMwMcdjc8AfNzR+AzAxx2NzwB83NH4DMDHHY3s826Aj4+J6KS9
      /BSbdp/CIg1m1oOLyYsP/ByebCL6xmI2bNuPJXw0zz5wFxrlUCtEt4Wzuz/geFkbHmUAo6fP
      Z1p+IvLPvI3X43sDfKkRKdu3nN+tLmLeV17g+aWzYWAA1ydRtbmBv/7gRfbUeVfcY9WzYdnb
      SEffz9fun4paIQDgNHWw9vf/zQlzAo8//3WeXTIHeUc7hk+ijZ8A0l/84he/+Lwb4eNfROxj
      3WtryXjwOaakh+OnDSIqMgiJ6Kan6hRvvfUOu06UExA/gkh/JRUH1nCoQ0l2fAim6sO8c6iF
      1Fh/9qxcQ6d7gN2rVnKgtIPYlHTKtr/Cmv1F1NTWUFk+wIhJWWiGvhRLbwNbV77Nmh1H6JOE
      MSJew7kP3uK9XWfo7GqlfkAgLzMZhUxCW+luVpyBH37rUULUSlTaYBLS4lAD/Y3nWfHWO2za
      fYCSJge5uSmI1lpWvL6VjuZSVq/fRKtNh7v1BG+9u5E6RyB5yRF47APsXP53Vm05QLNVTVpC
      FHL3ALtXvcHKDTu41GEjNjEBnVJ6y1voewN8mdE30GhWkJoQiyB8eNjUcpbf/n0Hkx/7Ft99
      OIv3/+93FHbY6Kkrpay5DwBHbz3nyhqx2a1UnN9PWV8QT373xyT2HGfb+Wom3/8kk9Ljefib
      v+JH//kQYVcqd/Wz/I9/QJ96H//1/y2lf89fWXnWwOiFX2FyWioPffP7/PDJeWgvd76uhgr8
      k3Pwl0J39Rl27NjBwSMXMQOCoGLa0m/y3z/+BlEtG3jraBduZx9nDp9FnTWPHz59FyfXr6In
      ciYvPn4XZ7Zsptdl5OCbf6Yt8X5+9OOX8Lu4gfVnmmg+9j67u+P53i9eZmF+NCajyatb6BsD
      fJkRJAiIeDwehj/Lei6dhYQC0mID8ZdMJifofS7VtpNw04qCychJQC2T4aeQ4XJ7bv6dXRcp
      M0Xz0ugUFIECMyck8PeTJdyfM+bGTRQERM9QfXI/LUrDKVZtukTq9Bz8ZSKFH/yDlZ0GBho7
      CcnWA6AMDCM2PBA/eSAR/uHERoegNvqjUSnwGNo4VlpHV9O7tBzyMNjRQmTyIEE5iTg3HWTF
      WjnzZk4hKUzn1S30GcCXmcAkEjU2qhtbGBOVcPUtIJVK8bjdDKU5unA6Bfykt3YHvEIqQyq6
      8bgBRJxOFxKZDOEmxcMTMxg8Wky/626C47MZb2xk87FKwMaud1/DMPpFfv71LGo++BlrvGqA
      gFSu5YEXX2Z+smLY8Tz++OsxlJ05zj9+9VNGL/0uj01KvmVtPhfoS00QsxYWcGHrei7UNNJQ
      XcKpwjoCRk0nuO8spy+UU3liB7ViGqMzotEG+WNsb6G1sYbzFxv+edUqf+LDA6kuLaStvQ/H
      leNheRTEmTh4+AQNFWfZeb6faTNHo75JNdEZk5gRO8CyFTuoamihtWsAmVKJFAGJTI7bZqCp
      8jyHzt+iPVcIiGV6fjj71q7hYl0TdZdOc7KshYbCI5yr7iMyczxjEvwZMFq8qs43CP5SIxCa
      kE1enIwTx05Q22oiNW8UsZGxjEoP59K5U1QPqFi0dCkZYX4ERcUidlVS1mYlNSuDsKgEMpIi
      kEvlxKenE+wnR/R4CI5PJS4snKSMJDounqSmw0NKTiJ+ABIF6bk52JuKOVPZTc6cx5gzMmLo
      SSpIiU1LJ1T94ZNZovAnZ8IE5F2XOHehlFabhtkL5pIWFkxcfCRtZYW0u0IYPzqD0OhUksLV
      CBIdaRlJqBUCHomGxLQENFIR5GpS09JIHTkOrb6aCyXldFr8yM7JJCpERW3xSc5eKEOZOoUF
      00ehUdz6rSf41gP4uJPxuUA+7mhuOAhuaWnB6XR+1m3x4eMzx+cC+bij8blAPu5ovJsFMrSw
      8t03ccRMIlorYmwrZfkbb7KpuIexOWko5bcebXcUbmb1gU7SRl2eTfDxb4KIKDqpP72D195a
      ydHCWrQxKUQEKBEEARBx6Sv58x/X4ZeURlSACtHjpKPsKMveWs7e42UEpWYTqVNcU6vbYeT8
      nrW8vWoj52rMZOQko5JCw4XdvPvOKg6XdRCdmEyQRoHoNFNyeCNvvreec402crJSUEiFm8Ym
      huPdG8A+SGnhKTpMgNPEjhVvY8tZzC+//hD+Ku9y+iRSOQrFzQMmPr68tJ/bxaZyDy/86L/5
      5qPj2b/mfVoNdgA81j52btyHGKTEYLAB0FVxmA2n9Tz57Z/yk288jA73R2q0U7RtNZXyMXzv
      p//Fs7NycEnAWLudtSc8LP32T3h6WiDvv/UBvU6oOvo+p3oT+e5Pf8wDyV28+u5hTB+t8ibc
      diS4/OAKtp6qQmx6ne66yXzvK7PpLDrI+oMX8KijeOiJp8gKEzi49l1sWbPQVO+jQjeNJ5Jl
      GIw2PKKHfW//DU/Bw8zNiqH24CqOWXN4YEIAa1duIjYpmNILNQRmTGdspIV9B06jzprHC0um
      o/I5bF9ARCxmJ3HJIwhQCgghMcT6q7C5PYBIXdFJjJEF5FvLL5e3UXmujOzpTyJ3mLBKdMRH
      XBtGE/trOd4VwqOzYrGbzMgiowiUSagsqWPUfS8RoZFD1gwKTv2B0lYbsjYD4+ePRy2XkDLl
      YeIK/0LrwDQyQ2/dvW+7S2XNeJy789OZ89Xv8KuvP8TAxZ28uruZ5773M76xIIHX//Q3Gvqs
      dNRVcOrwHioMAeSnROAcbKeipgMH0F5bQfugFQBDRz01rf04bCaqSotRZ83j+z9+ivqd79Pt
      P4bvvfQQvSf2Umm83Zb6+GyQkDR6PNLmM7y3cjUrVm9CTMwk3l+Fq7+K4zUOZk7LG9bR+qkr
      M1B5ZjPL336L1175C1vPNV+Twm3p6aBL38re9St5+61l/PVvb1LWZSckSk11URUmpwen3YFE
      KdA3YEWj9VBT2YLT48FutuGSeTCZHdc39QZ87FygppIyIvPuI0yjQEifQYxrAw1desCBImI0
      Tz0yCY1cQt9pLyrzCyY+MgC5n5SwiACiw4NRakz4K2SI/yQ/y8fniChi6OnAJAshNycFzN2U
      1XcwaOylaONBQkbdhbO/jd4BPUJ3J/rEYGTKQCbds5RRwUqcxjpWvHmAzlHPEHt5cCgioo5M
      48Glc9EqoOf8Bt47U8935y1mxPr3+eOv1iIPiCHEbSJ0lJTMKfdTv+UDfrlPj39ECjK7iETi
      nbP9sQ1A7ifH6XAiAoh27C45CpkUUBKdEItG7vNb/q0RXVy8UEH8yLsZmxsDohV75bsUteiR
      hWhoLDxCOyJNlZXQIyE6bjFxyRY6e13khahQ+kcSpLDiHOazayOiUfWcxySRoZNAcGQYNDhA
      Gcy8J77BPAC3nm2vLSc+3h9NkD+PPPddHgFwdrL81S2Eh6i8av7HNoD0yTPZu/wQxwt1SJuP
      40iaxYiYIJr+yTlhkf6cr6jgkmaQospOiP24rfDxuSFISUgMYevJowQKIxFMHZzul/BAXCwp
      I59iNoDo5vDGlQgZcyhIjaTLPYGVO9cSYh6Hu7MYfcIUolUigz1deNRBBAWkMSvzJOvX7WR6
      bji1pysZPfsJJMYGDhR2ExaqorP8HANJ05gXCINtFylutBOig+qzJwib8RjR3vV/L6dBBQlK
      XQgpqSMIVgkoVFpiEpMJ1ynRBMcwMimI8rJyjH6JLFl8LxEaKQo/DdGJyUT4+12+T3J0oTGk
      xIcRm5CAs6eFHqeW3LxM4hNTSIwMQhcQTHJyIn5SKUo/LfFJiWiUcpSaQOKT4tD4kre/eAgC
      gVFJRKutlJVV0m/zY9r8eaSEaq9ZpCOVKwgOjcBfrUATHEtSCFy6VI1FO4L7ZuehktrY9vab
      OONGERuoITw5E625kfL6biJH38WUEeFIZEr0TWVU1LfiFzeGOVNyUMkkCEB7XRm1Lf2E5d7F
      rLwYpIJ3LpAvEuzjC4G7r4TDjeFMz49E5qX//kngMwAfdzQ3dCrcbjc+u/BxJ3BDA3A4HD4D
      8HFH4Juj9HFH49W8iuh2YjSZcLlFEAQUfhrUfnIkHgcGiwu1RoPMS1MSPQ4G9SaGx7UkciU6
      jRqpN4Mft/22v9PHx0MUPdgtJqx2F0gV6HSa6waqHrcDk9GMSxRQqtSolXIEQcDjcmA2mXEJ
      MjRaDQqpBEQRt9OG0Wy7XJ/6+lmby2VMZhseJKh1OpSyK0pzTkxWOyr1UDvcDisGk5UPfRYJ
      flotasWtu7dXBmBpLea/f/F3gsaMQee0YbCruO/JJxnlOMtPXi3m2z//T1K13tQEWFrZsnon
      fYMNnCzVM3ZCPuHJuSyeNwWdnxfKBc3H+PHfS/nOz7/r/Xf6+Fh0XDrM7pPVWB0uXHYnSTMe
      YsGY+A/dB7eRwp3bOF7Xg0wiICrCue+xRSQGyLiwbzUnqgZBFAkbOZNHZ43EYxvg4OZ1VPU4
      cDs95M57jJnZEde4Iw5zN4e3baem3wrIyJ29mGkjQjD3NnDiyFEOl3fx9H98i7RwJYb2i2zc
      fhbr5XPb61sYveRFHh6feMtr83pmXapIYMlLL5HsNLL/3T+y81gVoyZ8+LnbYWWgvx+Lw4NM
      qSY0LBjBNki/VUJosA6pIGDo6wZ1LE+99BLGup20GGv4ynMvEaMDRBGHeZCeAQMeQU5IeDhq
      uYDHZae/tx+L04M2KIxghsraDH20DliQqQOJCNH5skw/RSS6GOY/PJ7wQDVu00Xeeb0E/Zj4
      od8CcPfWcqRby3MvPIJO7qZ859ucq9WTkNLF2cYQljz/OEGebnas3EHVuFxC2ovokOXy7IsT
      kZrqWL/2AB3JjxGjuvIremgrPUJ/1BSeXZyGAgdW19DDsbGqAl3SWDINh6+2LyhxPM++NH7o
      H5eBTavWkpMS7dW13XZoSSJTEhykwaw3X3O8t7WE/fsvYpd5aKtrIX/xS4yWnOF3G9r5rx8+
      R6jGzOo//S8JS37A/NyI6+p1GDvZvnYdnYIWuakbT8Jslt6bT92B1ewsMxIZrEGXOpnF8WAx
      dlBy5iSujgouNCv5/i+/Raziuip9fEJEJowY+sPjpL2mEVVqwjUyKBJ1EMGeEjqNTjRaO+2D
      IhFZSkwNl5BlzyBCLQdiyEsXKWkyk9ndSGjmw2jkUghKJz5sL519DmJilZdrNFJ+tgNVfjAf
      rDqFEBDP3XOmoQGyJ9+Dx2GlveLoDVrqoa90L4bYu0kK8a5DeG0AosdEQ3k5JnM3By8MUPDY
      CODS1c+DIjOYOisYs91Bq7iFo2cqmLJkDEnOk5R2G5gqL6VVns2ClLAb1t9ZcZTz7UoeXDQR
      P3cbq1fuoC5Xxsa9jSz69vfIi9Ngd7qhvQ2lJoy8afPI9KRQ9z9v02aC2OAbVuvjk0AUcZj7
      KDy2n3JDMPcvyL5mUZOgiWJ6Xiw73/kjAw4JsZlTuC9ag6PHQWCA/9VyOv9A7E4nHrcLnVZz
      9bhWF4DL5QKuGICFni4jWnkYU+5Kw9h4ljUfHOfppTPQ/hMv2W3p4kChnbueiPO6Y3tvAG4T
      tZcuYZCrmP3Vl8hNjYDmDw2g+fxuVp/sJCM5Bmu/BbfajUwXRkFeMAfPVhMqLyRiwn1EqW88
      cjV3ttCmt1FTWY5MgAnzZhPs6sIsCyQ0yB9BAn6X9SalUjlKpRyJTUAQRHwztp8uTmsfB7dt
      whE9kSV356CRXetwmtovcqzKwsMv/oBwpZPKQ1vYW9zGfSolA/pBuCyraxjsRxmhQCqTYzCa
      gYCh842D6GTDu6KSoLAgUkeOIkELxIfR9MZyuqwz0P6TcV9nXSXumFRi/LyfHfG6pEQeyd2L
      F/PQAwsYnR6N/COzAJUXy4geN4eHHpjPmLTIyycpGD1jFs5z21lXImHGhDhuZsDamHj8ZWom
      zV7Aww89yPSxGQRGphMm6aGxvQePx4nBS7UvH58kbupP7sKcMo/5U6/v/ABOox6zRIlGLkGQ
      ygnQQFe/BU3KKMSLJ2k12rEPNnKuUk52kpqguBS6LxZidLgwd5dS3xNBdNhwlyWI1BwFp46W
      YnO6sQ000esKQ/vPvBqPibKSejLzRiK5jRHhJ5ZelpaVzuEdy/lrVRYx4sDlowKyiBzyI97m
      A2cuqbqbX0FE5gzmpSzjb3/6LSH+WqLSx3DPXZNZtCCfDWv/zjGlhuSCe1kS/0m12Id3DFJ0
      rIhCoYWq/UNHIpKmsvixqbSf3IcxMo+xSaPJqd7JG3/9PQ6PFHVgFPMfTELQKSjIuMCaV/+I
      AwVpk+8lWSMgxo0iuWQtr/7xNB5BzdSHniBcCX315znXpWFeQSapE+ZRtWETf/79dgSFPwUL
      HyVMYWLL3/9GWb+L5sZazlX1kpI/lSX3TEdsPk6rajTTo1R4mQcH3CQXyGq1XhMJFkUPHreI
      RCa91rZED26PiEQiBTx43B5EBCQSEEUBiVQCbjO73/gr3ZmL+cq0FCSXWyeKHjyXzx1aOy0i
      iiLuy0rCgkRyuax4uV4QJFKkgojLIyKVSBEYKi9IpHyG+VN3GOLl1JhhhwQJEkcL6zecZ9qD
      i4jSCEO/nfva304QhMt953K/kF7+TYf/1oKAVCIB3BzeuIbAcQvIjw9EFMWrfeRKGUEAt8vN
      NR32yvmiiAfBu1jS8NO9MYB/Fbuxh20r/0KdZBxPPX4vkVpfPvO/C6Ktl3aTluhQv09kCloU
      XfS09xAYFYXiMwxwfqoG4MPHF50bGoDb7aWmhA8fX3J86wF83NH40sl83NF4NSp1DLSwe89+
      lMl3MXN8InJsFB7YhyR1GvkJAZ92G3180RFdtF06xd6T5Sgj0rn77umEDQt4us1NrFt/jjHz
      55IeoQPRTV9DCbuPnMcsBDFzwUJSQ68VzLTpWzmy/yCNfXaic6Ywd2IGg5UH2XC06uqMlFSp
      YdL8R8gMtHFs7xYq2ofiRCFxecydO4lAL7IhvDIA52Abew+dJqDBQGrai6QE2Sk+shuZMs9n
      AHc6okhb0X42FpuZP28+/ZeOsmLdXp5/fA5auQTRYeTk9u1UdnqI7DWRHqGjr+Ec6/fWMvnu
      uejcekxmGww3AFs7uzcdJCBvAvPHCpTs3sLe4EjmJI7mvsCMoTIuPfs37MIpl2PVN9Okhzn3
      3o9KBjKlFm8nHL2el5QHpJIb7aaoooWUSaFXj1cf3USVMpd7x6eCx8zujVtJzMuitLCFWQvm
      Emiu5oNjrdx17xwiVL7J+n87RBeVLf1MnDKH1PhQ3CF3U/LWJjpNNlKD1LSVn6JKmsu0tIbL
      /raT6rNnSZ39LDkpGoQb7V0pC2HO40sv5/OLKHOC2NpjQZEZQ4wmCBAZqKzCnlBATpgMff0A
      Gt0I4uNjUNxmF7uNpAkZE6eOo+LEcfqH7Z2h8LOzZ/N+LC4Pzo7T7DvdhTooEXXPOVbvOsyG
      NRsQotIJ9UlC/3siCKilbjp7+3CJIEoFAs0u+pwu3KYWjhV3MXPm+GEpMH1UFxupObWCX/38
      Z/z8f37P4Yrua+VxZcqhzi86aC49zuYyP+bkffjQFV12zpQ2MnZMFgoAp4mKM1v475/9jF/8
      +g8cKGrB4aWS4G1EpgR0ifmM0xziYHn/1aNRSfmEGF+htN9ByPkzBIy9l+gQf8IeWsCvf/4G
      XaPm8v2x8V7rtPj4kiFIyRmbz5YNW/nlbhOakEDs7TZiPRYu7DlGxOR7SAyS03z1BBdOtx95
      s5Yw/nEd1u4i3lm1j8yUx4kY5rOLLhvFBzZwos2POfffR5xOefUzx2ANLfpgxscEAhA+YjYv
      /242oujG1F3HeyvXEhP7/5ERdutBwO2FZiUaCu6dxT/W70CweogEFKGJPDglgs079hNU52Th
      90eiQMQ02I9dqcLR1cKg1UWQF9vW+/gyIqCLyObxr2cNpTdYu1m9Zh8RDgtnuxu5uPz/OCiK
      dLU0wPEaLE8/R3yqA6tdiUQiRRuZTbzmFGYHcKW/inbKDmzgojubZ5/Mw082TOvfY+H8joOk
      znuRoMv+jtt1ea9iQYouIo24YCdmm3exrNvMTRDQRmQRL93BjrYBIgFBUJI1axZvf/1vtI65
      j+cDBVyWfrZsPsrEx59DU7yejQdKeWnRWBS+hJ1/S4w9rbQZPcSE+1N54hDu0DSio5NY8uJP
      WALXSCNOz46iyZHO6u3byHjsbtzNh2lW5zFLJeJyOBGlMmSGOg7Wy3n4sXQ8dgsWO8iUKpQy
      Cea2cko9qTwVp7hqFPWnt3DJk8H0vFiM9aeoHIhmTLDyn7T4Q7ySRhRdDixuBRmZyfjJ/IgM
      UqJ3qcjNG01csAqpJobO0u2EFjxIQUoY5o4y6p2JzJ8+loz0aJorawlOyiBA6TOAf0cEj4Xi
      wzvYuvcknsjRLJo/8bq0aYfNhi4smhCdHwGRqcTI2tm0aRfVtji+8uh0dDIHW17/K33BGURJ
      zVRcOs/J4yc5c+YMZ86cwRaUQVqEhs6WVsJTsokN/nBBTUB4NIOVR9i88xC1A/4seWYxMRrv
      PI6PHQl2O230N53n78uPs+jr32JklJeqpD58DMPdV8TWCwrm3ZWF6gZrDj4tPrYBGLuq2bn9
      CEkzFzMuKdC3ON3Hl4obGoDH49uNwsedwQ0HwXa73ZcO7eOOwJcM5+OOxmcAPu5ovJNGbLnA
      //vN33FHxqMSQR2exkOPPECyl/swfdL0NFZhUkeRGO6P4Hay+/UfUhT5VX784MjrylrbSvnN
      r/+CPWJIzEkVksKiRxaRZivih6+f52s/+hZpPonFf4rbYaLu4jl27ztMzoPfY2a67oblRMcg
      W9/4E2clOfzo2cWYL23n7R0XcHkAPAx29zL7m79l/oihG95Xd47XX/kz6U8v4+GRmmvqctn0
      nN+/g2NlDThEDdMefoqpacH01Z1j685DtBhcxGRMZfF9U9GIJkqObGf/uVrsboG4UTNYOHsC
      IepPSBtU9LhxumN5/uWXSbT1seXvv2fL8Ry+c3+uN6d/4hRtW05F8iN88948BImUnJlLiFbd
      eKMxUXRjt0fytZdfJtmuZ/uy37H5cCbfH+/CarPj8Q11bklX+SlKuhTERGiGBJJvhOimqfAI
      fYGjSZaYEUWIzF/AT/IXDH1uaWX1qmPkJlzu6B4DhScukpSRDlxfZ0/VccpdKbzwnUdRY0Vv
      lwMeCk8eJWnmV3kyTcmpzWs4UpXN1MAWLjTCU9/6IWEKB3s3rKK4JolZo24tj3jbq9RlSn+S
      k8I539VD44F/8Mo5fxak97PlopOvf+NxCle8TY3RiclgInXWUp6en8dA9QlWrNuFQdQSoDHj
      DJjP849E8Nsf/C/p48bT01hJhyeWuwtiKT19liZ3Kr/91XOINcd4c+MRrHYnRrsfDz7/PJFd
      J9l5roqeS8v5n9oiHn14Ed1ntnLK7yFGxmsoO7iJDw5fAoU/ubPuY07ch22XKrQkJUVxoqkH
      hmmbdVw6yLrtp9DbbBgtSh556TuE1a/h1VMafvqdRwiS9vCXl39PzpM/ZWZG0B031RuddzeL
      86Bw20X6blLG0lPL0Xo3sydlcfh04bUfih6qLxSiyRlNrJ+A6HFQcXAX5qzZjO/ZQPF1tRkp
      PlZLzKRYCo8fQdCEkZefDbTS1Z3EPZnhSCWQMyWf3YeqcM0KRC6XXLUjQZDi5yf36tq8NwDR
      jdVkos/QxvGzTWQvfBCsVQx0N9CZNZFvPJtDTIAO7eJnmO+vwlixjz9tOkvv/BGc3LENzeil
      fHNuDtWbf8nKK7JBUjVZU+9n3OPT+dMPX0OV9jX+c3wOv/7FWjoRSYrM5InnRqKROzm59m+c
      LG7nPxfdxz3nTl99A0g8LrovV2drK2HD3jru+dYPGR0mw2L3IAxUAW4sJhMD5i6On6ojc848
      oP3qpQXGjuTRZ/LRKD2cX/8XDp2p4z+mT0G7YwWt+gVoLBfpVOawONEX57geEdFlovjYWVIn
      3k+Quvu6Eh63naqmTjJmzwFETN31XOzVMntyNPrDN6rTRFebAbr6SA9QYmw+zdpuN08u1CD4
      BXNF+E0qD8BP3oEqJJHxadUs/+tvsboEMgruYWJCiFet99oA3M4WNixbRpBCS+7D32JKXgId
      h0EXlMDse2YTKgPXQB0bV76HUeKPwt7NoD4aJ93UN7gYc28ScqnksgbMZeR++Kv9kCqVaBRK
      tFotCpkcmUwGuOmuOcW720tR+fuhb2pBUfDPd//ub6vH6B/HiGgtMsBfDhY9iJ52Ni5bRpBc
      Q/YDLzF1dAq0fmgAbZeOsO5gJX5qFYa2DqSj7agCk5mQJOVESQPW3iISpz5ItJ+v+1+PSNuF
      veyqHGC05AAtxh7Kq5oIDCtk+vQxBMhF9NV76NPNIClCBZg4uXENDdJMju7eRm95A631e4hX
      T2Fc6hXRZDkBwRFkTp9FhhpgFFteW0W7eS4e2yB2D2gk4HEZsTlkGDurOVnt4slv/oAwPwf7
      N6ylqDaKGTlRt2z9bcijJ/KV736X1I8cl6t1+F2uRV91jHr5GH7y0j2oW47y89erADVajciA
      wYjHo8bh9FZxwkjhviMkzvsRS8ZqKdr0CoevtEUqwel0DYknDTsjKCwKhfECnUYnOo1kyF8V
      QZDE8cR3v0vaTb6p8PQJEqa9yJJJ8VTseJVNJkCuZvzkMZzYeBiDWsH8Obe+mXcmAoGpBSxV
      9eIUwTbgR3OvidiYcBQS8Nh7OX5MT8HjqZeTPRXkznmMKIsdAFXveWxhCUQEDNebDiI+zUFx
      cTOpE2PBYcDm0aCQRREQsI32LgtBEXK6amsREibhGChHposhUC1HIpERGxnEpe7uUVkAACAA
      SURBVK4e+CQNwBu0MSOQt21m/RorEWIbRqsMCGPG7FEs3/YOlvpMHDW9cL06+g1Qk5SVyKpd
      q5G2xjJY3ozjskp32ph8Dm7fwypPP3dNK7h6hippHAvHVLBx2TJiwoOIzpnIxNCbVD+MhLhY
      th3dygfdyehrWiEeQEJI9hSSV22lKPAekgPu1BU9diqO7ed8Yz/tlRVYatZhqE9k2ozZ2BrO
      Yw5OJTM6mszgoQGnuUtNZfsAqclxqKTQdrGUwbgsRlyVdVYQnTqCK8NTTdt+zDEZxIdpGGyv
      pGpAxfjsBDKnzOPSus28VxWA4LQQPnEh0X5+uPPS2LV5BRdUAkZHCA99JZ5Au4D2/DbWrKpB
      JhExWiRMW5jo1dV5JYzlcVjo7jERFBPO8CRTh6mffpuMsFB/pAype/V1tGF0SggK1GGzegiJ
      DMbe38WA0YJLhPp9r3E27Gm+tzCZvu5+AkPD8JO76escQBUSgVrioLtbT0BkGDKHifaOXkSF
      mgCVFKdEQ2iACo/TRl9PNya3nIjwMERLHxaJP2EBKtwOCz3dPdhcEgLCwglQeOjuNhAUE3FN
      23GY6ei3EBwWhsRhoLu7D49cR4BaxIaG0EA1gsvK9mW/oT/7KZ6YloL0jvSA3Ax2d9Bn+tD9
      lCpUhIfI2PH+Dkbd9xhpoR/eWY/LzqDJir9/IFIJ2EwGHIISf82N05Mdxl6s8mD8lSIntq7G
      nTqL6dnRiKIHm7Gf7n4jgkJHVGQIcomA6HYw0NvNoFUkIDScYK0SRBG7ZZCeXj1OUcA/OJwg
      ncoruczPRBmuZN9qzjQYcDmsdOtFHn3hW2SGfrEXyNhNHexZ8x7ltiSe/OpDRP8zYfo7ENHU
      TNVACCPiNJ+QNKKTpupGItLSUP27SSM6bWaMpqE3gNxPS6BO9YWfTfG4HRgGBpFqAtCqFF/4
      9vr417ihAbhcLl8ynI87Ap80oo87Gl8ynI87Gq+mQV2mHgovFNFrvCIIpGPUtHHE6rxPhjO0
      llFlCCI/K8bLuVcbdYXFWCOyyIn1v3VxH58rosdNT0MZHZIYRiUN1/Cx0VxZgiM8j7RwJTj0
      FJ4qpNNku1omMDyDMeNSrtl4z6Zv58KFixjRkjUqn9hgNYIApp5GSsuqGbRLiMsaTXZ8MG7b
      IDVlF2nqNoDCn1HjxxPp7924zas3gL23jlXLNmEJCiIoKIigIP+hHb9vg67i7azcXYr9ZgUs
      vXzw+iucbr+yD5iJs1vWsv9S7219j4/PHtFpomjfGt588y02n228etxjH2Dn6jdZ9d4bHKox
      Dh2USNH4B1zuR0FobXXsOd/C8DWIHksLW1ZtodPth8TazKpVW+i3ucBaz5oVu+h1K9Ep7Rz/
      YA0VAx707Ze4WG9AExCA0tnOB6s30mHxzrP3OhAmkQaRN2nS1Wiqx27k/JHTRIyZSJxWib69
      nOIWKTMmpDPYVsGx05dw+oUxbvJEYgKH2bYoUnR8H4GZk0gK1dJcepRedSba9n3sOXiICKc/
      TQmpLFwwjkmLFtEbGAyiiKW3kZNnihlwKskrmEZqpJbumjPUmoLQGOuo63GQPm4a2fFBPr/u
      M8au74OkKbwQpeO9xg+ni62dLcTc9QR5cbDjykGZjoz8sUN/u0zsX1PK/IXjh+07LNJ5sRBH
      9lQenZEDHhva917leIOR+1PCePSlF9AphrbOCjT9H1WtFrJyJ/FI8pXzXejf+AM9gw6i1beW
      RvG6r4iije62Ntra2mjr6MHutlN7YhP7S4byA8sObOBQZRempvP8Y9kG3OFJBDprefW1tfSa
      ncPqETm0cTllbYMAVB7bwP6SNgIi4gnWaohKTiczLRY5DsoPfcC+Sz3YDW0s/8drdEpDSfQ3
      8t5rb3Cpy07ThV0se2877oA4wqjn3VW70Ntu2HwfnyJ+YQmMTk+4LlCoSRhJXlzgTQNSho46
      WqRxjIy4NsoukUpw22w43CIicmITNLR2GECpQ6cQED1OOqtOcaojknEpasCDZbCPpppL7F//
      Lpb4OaR4oQoHt5MM5+rm0JYtBAOoY1i4aDYFEzN55VwJlsmBlFX1MH5xKuXn3sUQOYX7p47F
      bYyh6Nj/cr5z4XU5RB8lOCqRUH8tcenZjEzVAR/uRD9Yd5Ry5wh+PmMKoSqRpvPf5vjFevKA
      qPR8xozKoV9exdrTbThc3l6Rj88XDzUXzxKZtgCVfPhzWCAiYwzaNVt44+1iVAol0t567NlD
      OWQe+yDnD+/iXIuMeQ/eT6xaAthpu3SOAxfqENQakqL8rm7GeCu8NgCZPJ5Hv/71axLK3KMn
      otu1ndoKLQ32ZOYkhtFRZkOuHLJoQZAgk7iw2j+eyoTHZsejUHJl2KGQyLDZ/3lmqI8vMiLO
      vjKKWsO5f3bkdW6IoI3mvseW0tU7gBsJ7Sd70EYHgejg9K5NtGlyeOLxPPxVV7qvkrRJ80id
      6MZm1rNr01pKo2OYmHxr6f6P5S5LAzPJiTWyZ8MWlKOmERsgIykjj8GqUzQM2ultvUSdPYyc
      yGuXuymlAkarA+tAG02dl5/0cgWBaujuHMTtdl+zUkuTOIqAnhKqOgax91RQ2AE5qfG+6OyX
      FdFB2dFiIgvGE3YjPXO7ntZeG+Gx8fh7uinuCWNiihb6SzjTE8XcGWMIUMmu/v4dFee41NKH
      WxCQ4aCvV48oeNe1vZJG9NgM1NRf4Nj+Ixw+eJCDB8sIys4gSqtBJR3k+IluFjy5mESdHG14
      EqkBA6xdsZazdRYWPvkkI2MCsfW30EMMY7JjCdN4OLprF+XdUsIDRXRxo8hOiSY5PpATW9az
      /+IA4yaMwNTahCcylzEZyWTEKti3aT17ztQy6aHnmJEVgaW3CaMikTEZUTjNvbT0Sxmdn4XK
      u8VAPj4RRDouHWLZa2+xr7COnsZyjh89gid6JK6LW/nL22s4VdFFZ9V5Tp85R/CIKQTTT2m7
      gYL83Kvujyg62fve67SpE0kMVlB9cgfvrN5ASbvIrPvvIyVUjbmphM37jnD2xBEOHTzIkZPn
      UMXnE6kY4Mi2D9i4bQ/HL9Qyev7jTEgN8WrPYF8k2McXAnd/Ee8fsnDfwkn43+4uFx8DnwH4
      +EIgety4RQlSqfCZurY3NACfTfi4U7jhLJDNZvMZgY87Al/Q1Mcdjc8AfNzReBUIs3WU849l
      y+kXNMglCmKzJrBw7hTCBov5/YYalnxtKXHqW9cDgChSuvdNVu9rZ/H3f8LoCDnm2qO8uauP
      x7+5iFC3k/6Wi2zasp9Ogw2/wCgK7r6fyRnhH+MyfXwcPG4H/e217NtzkOTZTzMhUfORAk7a
      q86xZedh+j0axt11H3eNTqSvZMcwaUQRh93F7Kd/REjtKjad7bxyMi55CI898zyZEVdyd0SM
      XTXs3bGbyg4rMblTeHBuAf5Kgc6q0+zZf5IWA+ROu5d5EzNQSkQcVgPVhYfY36zipSVzkHm5
      gNsrA3A7zHS0q3j+9ZdJMHey5s+/Y60qkpcyDTS1dHC7gV5T3wAyjZ1j+86T+VgBbssAzc09
      OIHe2qP8+e2TPPDCN/hqQiCWnnrqB72VUvHxadBbfZrdRT2IzkEGrdf/FpaOErYdbWHBc98j
      xNXC6re3URH3LCOHSyPauvhg5R7iItWkpD5P7rzLJ5vrePf9EkIChuXuOAc4tHk/ITOX8oM4
      BWc2vMXmC/F8ZYyUbTuKKVj6PEs1JratWMWRsGhmxokUHt9NfYcFg9NzA6HFm3PbsihydQg5
      WbGsa+mAzA+P97cUsX3jPhr0VlCEsOirTxPWdYC3T7p46ZkHCPBzsfGVP6Cd8TRaJETlzkbV
      fpqG7lyGq3qWHD5C0ISFjEkMQiII+EekkhcBINJbX8jW7QdoG3QSkDiapQ/NJVTtW6z+aROY
      kM/DKWrKd/+D/us+FdF39hGam0ucvwLEJGbmqTlZr2dkxOU3hSjSUl6EO2kUSdphT2aPg7Kj
      x4gsuI/Q4aJj1i7alCOYmxqKXICC+ZO5sKocQ6oWe1QBGRE6ZIKOKdOz2FZUjSslj9xJ9zLS
      2MzbB2tu69puewzgMPVQWNREUvK1YrQKXRR3L3mBn/3sRyxMtrJ5TwmKmBG46opoMlrAUEFp
      s4y4qCHJOpkqmPxEf06X1V9TT0dvD9GRIQjOAY5sWsUrr7zCxpO14Ohh28p1+I1Zwg+/9w3S
      DcdYdaQeX+7bp49CrUOtkHLj/DKBgGAtbWXldFncuJ1WLDYbA4MfJjOKHhdlNc1kZaRc0+Hs
      +jbO9+ooSA24tiOqQgg2VVDUbMDtdmGw2HD16bHrohFaz9DQZ8XjtjFotGM3mPBIZWi12n9p
      L2qv3wAuey3LfvlL/OVq0ic/wdypKdDRcvVza3cDm3Ycpt/oxNrTipiRjzJoJAXpEo6db8Ff
      cQpF3gySg+UUAggycicXcPytY9RODbtaj0Iqw+J0gTyAsbPmI257jf2lLTyYqKJiMICnsuNR
      qGBMfiq7DlzEMD9tKEPVx+eGOmE8iyYc4/1XfoNVGkCixog8/Uo+ioip5SgdjGZ61PCxg0hD
      eSHBSfloFR95DsvDmP/wTLZ9sIwDgyLxI0JBEYjUL4FF92awbcVfWOdUER+nQSEP+1iBM++z
      QZWpPP/yyzdNay48uAsxbRE/vjcf/emV/PECINMwYco4jnxwhAPqQSYszrpGnEoWks6U9IMc
      O9OEi6Gbk5Iaz9rSajzT0tD4+6NTK5EYAbUaDTYsNg8gYDIYUQYm4t1usD4+TQSJnLhRM/n2
      qJngsXJq3RpcyUFDH7oNnNlfx6gHn0E9PDfH2c3FMgtjnki8wZNbwD8yi8e/kQWIGC5t5X1F
      OgFIkGVN5z+ypgMidUffo0iW8rH6wCcmjRgSEsSJmmJOHOmj4XQp6CIBAf+sqWS9/x22u6bz
      xnVbqMpIn3wXu3a+zIBsNgC5MxdT+e67vLLCSU5cIO2tZkKi/CEgmwXTjrN3wyoGUrRcOGPg
      /qcL8Hbyyce/ipPW8lLqekzUVbdiMp5EZ4kmK3skju5a7NooYlUWjp8oxiaVYR9op0uRzJKY
      oXXc3VWltIRlMStoWFcTXdQdP4wwegZJV/fzFbH0t9NmlpMWF07duT1U6xXI3XoqG+0seiIF
      GVC4fz19QiiiqZ0GQzRLl0bisvRRXlxGb08rbfXtHDt6hNDEHEYm3VoX84bZoC7XtZ61RKEi
      OjGBuKgwrllnI9cSHZ9IfFQIUQnJhPuBRxXOuIIJpCbFExmsQYISS0cFtuhxTMuNRQKoA8OI
      iY0mSOuHXBlAXGoqOaNySYgKxk8VQNaoUWg8VpxukYjUsUwdNwKNn4KIpEyitWAVVeRNn0t+
      QoDXCx98/Kt4MPR0MWBxEBydRqS/HKlCRVi4lqMb1iNLyiMqSIuf1Mmg0Yo2PIUpE/PR+UkR
      ADcyEuIT0F0jjejBKQSQlhKNSj5kAKIIxYc20+gKZ0RsMEo/JWaDAcEvmPFTJxMToEIQQCGX
      YDZZUQQlMGXKGIL9ZLidVno6u3Eq/ElLiEEiCKgCwokIuvXj8VNVhnPZjJSc3My+s0bue/oZ
      siLuVIHZfz88+koKu6MZm+7/CUkj2qkoLCchPx8vN3n/RPhUDcDtsNJUWwFBKSRGBfjCzj6+
      cNzQAJxOpy8ZzscdgW89gI87Gp9X4uOOxrtcILuJlpZWJLpoYiP8keCip7UVISCKUJ13s7Au
      Uw/Vzd14Lq92l8r8ScqIxzcs/nfAg7m/i5bOfkSZmqjYWALUcgTAaR2krbUds0tKaFQsEYFD
      MzOiy0ZnRzfq0BgCVDcY9YoiDssAXb1OIhIirs4+Oi16Wls7sEs0xMZFo1XKED1uDL3ttPca
      kWpCSI4LR+bN7hh4uSje2nqBX/zy/1HcIZA/JheNzMSaP/wPddp88uJvJD3houHcXk42S0iP
      GwqIDFxYx/f+uAdlgAx9dzd9AyLxmQk3NYDzO9bRKA0jLlhzkxI+vhiIWDrKWbthB619Rtrr
      yzhbO0j2iCSUEgv7319JcUs//Z1tdLl0ZMSFYDe0s2vDWjbt3Ik8cTIpoR99iIr0NRaybv0q
      dm1rJXf+WIaiCi4OrXud07V9dNYWUdorZ1R6DIam86z74DC9hl4unT5GtyqVtGidV7NTXgfC
      FKH5JGtauFDdwdzhu3qLHsy9bVQ0tCPKtaRlZqC2tnBw73bOO/IJEQZIzM5FDoTE5HH/Y4/x
      YWKzi466GuzKQGz97Qw6FKTnjICeBvZu24y9Q4LEmEP2iFR0qk90OzMfnxgizWXlaLJm8vD0
      bAR7L2ve3EaryUpE/XbqI2fz7OxU5IJ4OS0aehtriSpYxEz5Cm6c56unvt7F3Y8+iPh/RVeP
      erpOUWLK47lnpqMRB9j95ipK+0ZjPXWYtHu+wfQUFW5zPW/8bRMtI14kQXtrE/B6DCDIVBSM
      TufcudJrEtAsffWsencVlW0d1J3ZxpvrTzBotWAw27CZB+np6cfqvFm+tIWDy//EK2sP0NLR
      yvENy1hzohGH2YDZ7sQ8OEDPwCBO98cT1vLxaSIQHhtGV109g3YRY3cb/YKcYD83pWd70XjK
      eP0Pv+a3f3uP8o4hgdyYkdMYmxqBn+xm3S+IcbMmEh+qu0Zu0dhQjTorF3+5BKkihLQUKY1t
      ZlxOD1qdCokgQa5NISZigD79TWWYr+E2HqsCsWOnM7p0LXsvxOP0DJ3ceH4fHQFj+cn9s5C4
      J7Jp9WGcmrGMz4yjzzaehQunANAHtFbu4Xf/VYUf4Bc9gW9/fTrIlKTmT2b2XdH4dxWyoaWf
      iFkTyYoJxTJ+GgunjvC+iT4+e0QRtzaRmVkVvPablyE4kbsmTQbc2G3dWCQzePKb9+LpusiK
      jRsI+Y+vEfsvDvxERNTqD9NpVGoVIJCWN4ZTZeWMDM3ErW+ludtK/CctjThUOpTpD8zgH8s3
      YzE6SQBEt432rh5cbhE/WQSLnliMIHHRKAggitfEE2Iz5vKDX31lmAtkAEFAEAQEgWt8NkEA
      j+fD8wVfysMXE9FN+anDONJn8+NfzAfRyrF33uVi8KOkZ0dQLVGh8VMgTUhnhPQUvQ7+ZQPQ
      JaTSu70Ic95kVKKBS5cMxD2sISp4Jg8gQSKA28+J2i+DqOvGFTfmth1rTUgKY8NEfn+ihwQg
      Ydw95Bz9K//3jovMcC1OmZbpU6eTPHIs7pX7Wb3JTMH0GQQAA52X2L1pEzpApohi+r1ZN/2e
      7AnZrDi0k03OAaZPHEOI1ju1Xx+fMRIZWXmprNu9DX1DFNgMNNqCeTJKR0TcwwS++i7LO5PQ
      igPoY8czy99B9ZmjXGo3UldSi6NnO+7ORMZPmIi5sRRXaDJJaiuHT55jwNRBeUsNbNpESuJo
      CvInk6P8CytXtKB19mCMKmB2qAR943n2nqpHrvDQ2djJmEeeJ9LLFFGvAmFu6yAN7QYSUuKQ
      I2Id6KCmpY/w+DQiAxSY+zuoaerALcgJjU4gJiwAqWintb6OboOH+IwMAl29lNW14746DRpI
      Rl4ihsZ63AHxRAcpMHQ20S0GkxoVgNM6SFNDI4OihhGpiWiVvkHwFxbRzUBnC00dfYgyNTEJ
      iYT5DyWvWQc7aWhoxyHXkZScSIBKoLO2ktZhOvYKTQBJCSFsf+d9Rj78DNmBDipqGjDbPhxt
      asMSSUsIxW3qo6GhGatER3JKIv5+Mlw2A00NDeitIv7hcaTEBHudJOmLBPv4QuDWV1PaH01e
      svbzV4bz4eNO4YZ+hS8Zzsedwg0NwLdRto87BV8ynI87Gu+mVkQP5r42qhracQkKQqMTiI/0
      Z7C1HoMymqQI7cdshpW6Sw1oYpKJDLz1JLHd1EtNm4mstAQkXiY9+fh0EUU3+o5G+oVQUqKG
      8sPcDiMNNXX0m+xIVYEkpyYTpJbjdlppra+ha9COKiiajJRo5B/5HR2mXmpqGrCiIj4ljTCd
      EkGAjtpimvuGorxSuY703Cz85SJum4Ha6jr0Ng8RCSOIj9B59XT36g1g6ijn3WXvcqljgN6O
      RnYfOEqfcZDiHe+x8VTr7dynm9DDulde43j19bJLN2Kg5QJ/eXsLLo/PTftC4LFTeXQzb/zj
      VdaeqLt8UKS7/DRnKproHxig6eJRVm4/jQuRulOb2XLsEr29XRTvX8fOkq5r1dzs3exdt4mS
      5m5aa8+zct0ejM6hrKEze9ZS06FHr9djMJhwieCxDXJoxyaKatsZ6OukrrIJy0fbeBO8egM0
      V56gjmz+uHDusKPDv0KktbIIszYRP30DzrA0UiP8cVr1lFe1EhEso8vmT05aNM6eGs432xmV
      m43G1UdpdS8po5JZ/OJTKGICserbudhkJF5rp7qlj4CYDDJTolBI3PQ0VFLR2IW+u54bKPT5
      +Jyw9bZjCMvn2Uf8WNP8YWpz5KjZLB11+R9HC8v/fIxu9FQV6Zn1zAtkaYHBC7yysgxTfiQ6
      AEQ6y84ymFzA0unZINo4tfINTjSamJ9uxuoZzbwFcwkd1nM7K0voVWTy4L3jkd+mQ+DVGyAo
      NBax7QT7L7ZitjsRYZhKmAdz8xne23CUQRc0F+9i7d6LiMBA02nWbjlJR3MJK9cdwO5y0nB8
      C8u37qW2y0R/7WlW7TiFCyuHN67ibJ2egdZiXv/La5R3WRDcvax6ZxWt/VaMjed4a/lmOuwC
      UkHElx73xcEvPIkJWckfycEfSnFxOWwYBto5tO0wirwcwtESn6ai9FwFBsMAJSeKCR2ZynDB
      HFEUkUqEobeCoCQpWUdbhwHMPZQUHeevv/4ffve3dzhb041HhP6WavoGWnjjT7/l1//7V07W
      9uPxchLHqzdAVO5cfvStYDZtXcGJDzykT1/A/VNSAGgp3MlvTg2y4KUfMT5OjcE5le1vHqPJ
      WkBPSSkxY+8lNVWKaus6Oi1dXKgJYO4YNe0dHf9/e+cdH+V15f3vdEnTR23Uewc1RDWI3kww
      GHAvazvdid91kt0ku9mU9RtnN/mkrNdpTgyuYAyYZnoRINFBCAkJSaj3UR1J0+vz/iFcsHE8
      xI7jN8z3L2nmmWfuzNxz77n3nPs7+Lqbic2eg/6DZhiVyrwZ0/E6Y9i/5zw2u4Wu4weQTFrD
      fcvyMdV72FlZH9AHDPL3pfbYZo7UDKCLySQ3NxwJUmIzcqk+XsafL7lQhscwpyCc9+YNEcas
      AkSb9/PGYBNquRhHRyuOLC8oC/jvDc8hCAKWvqts2fQakkeewjc6glddxJfuvxuFu4+X17+O
      5t6vMjnm49eTARmAgISojBl85eliTC01/PG3r5GY8S0AwjQGwsxjeLxe/IIIdXIeU8IPcL76
      CpZmP1OfyEClHyNb46H2ah8DUVGsTVBQ1mPC2eMgc0HMxzfA78NqtRJm/KSL7SCfNUXLHqdw
      iZfR/kYObjtMa+xiLhxpYdp9T5CpU2AfrmP79iNEPX43UdfTvUTqBFbdu5q2LhNekQyLoxVJ
      pOaGxEhNbC4zco7QZHKQGxlLlCSCUJkEsTyevJworKMWCMAAAnKBTM2XqKzvwi+Wo9GEIRJL
      35WzC8+YwVcems7uP73CtWEHIlkEpYuLufjqelrDi5kUI0ek0FOQp+bYkTNoDOHExsXS39ZI
      k0MgKzoAZU+xnLi4eExNdYy6fVhGhnAEVXE/57joulpPr9mGHwkKmRS73YLXL8bjGGHM6kZA
      wDVuZtTl5wbvyW1lyCYhLWcyiTofjcNRzMhQY+u8THlNO3aPD/tQG1favMRFhRKVks3AxWN0
      jTvxOQbo6LSg1gc2WAY0AyhkIuqP7uDQW2MIMiWTVz9EQbSOK4YoIjQhROQsZmXBHyg7eZXM
      1VPQp81C599NUnHWdelCKen5JXgrTmBMSEAaoSTTP0RzRCERWgXgQR9lRB0qRapQExcdDqIJ
      zclooxGFXEHyonU0vbaRX/+8gdTUSOJiwj9CrTjIZ4uAqb6cLbtOMDJuweyR8UzlLubc/xR5
      jLL9td0MjbmQqaKYsmglaXoj+lUzOLhnA4dHnKgiU1h6zwoMUi8nt29GUrCMmYlyuir380p1
      Gwp9IqVL7iQ2TIYQkYD34m5+u7cXr1RH8bxVFBrlSH35rJxrZtcLv2ZcUDFnxVoyoz4ow3lz
      /ibCWNaeKn6zvowHvvEk6eGBNSTI7Y1/rI4thwdZtnIuOsXfuU7wX28AAv0NJ9m27wK5Sx5k
      Tm50wKfzg9zeCF4ndq+MsOuaop8Vf1NpxCBBPu8EC2UHua256SI4eP42yO1CMBs0yG1NYHWC
      +xtY/9JrdFtFSMQKUksWsGbxdHQBiFX1X97LjkY1j85V86sXduByOrG7BUJCFERnz2Ttwmx2
      bzzI0i89RloABQ2CfA4RBOwjHezZuoU6k5uMO1Zwz/xCFGIfdeVvsftEHdqsuaxdUUq0+r3a
      Yd01+1m/u5+v/esjRL//zLfgY7Clkq1v7WcQAwtX3sPMnGgkIvC6bLRdKuNcr5G7105DCTjM
      HRzeuZtLrQMQGsUXHnyIoiQDgZQKDkwb1DFKU73AN155liSridd/8QwbRBq+vXLyx77WPtxB
      XXM4vvtK+eGPi/Bf3coj64f4xX98nbhQcIx3YYgwIA+wsHGQzx9+awdbNh8gb8WXWRMXQq/J
      jAg/4w172Nug5Uvf/Q8Gyjfz5uFLPLVmOiLAO9rK0ZNX8QsGXB8QPrP3XuSNPY184avfJ9LV
      xJ9f2ETEN58k2+Dg8KZtdMrcOLvF7wq0uR02EqavY/k/ReMzt7J+w3qUjz9NToTsQ239ILcs
      tSBXhlNUkMLLbT3AJAabL7Bj50G6LGJSpy3hweVTEdsHOLTtdc61jCNYO3Holn7k/cSCnLHR
      HhweP4LXxtm9b3DoUjthhhik8ni++PW7EJka2b75LVpGfMROLuWBu+bAtb28cFLOqpl+3igz
      8cRjD5NoCEqnfPYI9NTV4E/KJyXMxdCIB31EBDKJmwunTMy6+zEiQ+WEWlrLuwAAHclJREFU
      z5nNmT9eZJjpGDwWzhw6TcLMpfgqLn3ofiOdJozTppGqU4CQzbL8w1S2jJNtUFOy/F5Kw9rY
      +Pv30vC1sbkUxU6UY/XKNETo5AGXTL1lA3Dbh6mp7SV92p3gMbH91d0kP/DPPBZn48Wf/obj
      eXlEV26gzJzNv//bCkYq/sBzFz/6fn6vi87WFqweD33nd/D6RT//+u0foug4zI82VOPxzqbs
      lY2ELPg6P8iT8davf86+KzksdpmoPt+NXJrIrDtmoAsWzP474WfQNMRAazdv91VjtTtxKVN4
      7KHZDLm0FOgmfhdxmIEYwckY4G26SLsihXWZUXRUfPB+IjSGMHpOXmOoOAO92I1f7GdwxApE
      EWkMxWn94GvctF6o4HhlI1aXj6JlD5MWHljXDtgAPO5rPP+9b2M1mUkvvYcvlWaC6RQn6pqo
      e/k5KmQ+rBYHxrFeqi90kr/qixjCZIxLpQEGNuzUXagjofiLJOkVDHbLJny4kU5O1jXhGfo9
      VxR+7OYxci0OkANhOpate4hsfTDa/PdFSnLBHNbOm4TEb6N842tc6bMh8bpxvePdCF5cXgGs
      7ezfV0v8woV0tbczZB6ivaMbfXLiuwLI6rQ7WNx3gD/94j/xyHQkhYwgyf9LA5yEyJQ85qij
      6W+/St3ZM2QkLMcYwKAYsAHI5Jl87YdPUffS85y1eiYivDIZ+sgU/unpHzMl5h1/a4jX3hTh
      8ftvMaInQiwW4/F+4KSLVIpKFcH8J3/IopT35L6GToFKE0tEsPP/nRFjjNNyos2MRCJCLFGg
      VykYEEKIjxqnpddFVpoMn7mfLpWWeU4/hiQDvTUX6PVa6ezpQF51hYQI47sGIJKGMWneGibN
      WwN+BydffwlP2l9KmpSgjjCijjCSkT0J++b/5WqHGWPOx5dJvSUXSKKKYeWj32T8+Z/yq1dk
      fOfR2cxP28G2jRvxzp+Ez2JCnljKjHkF/O7QmxyXzsBc34nbGx7A3cMoLJ3Nno072RtjR97V
      wJgd0GWwZJqR3a+tR7Z0KgrXIJ7wqeTcSsOD/A0RYZw0ncSLb7B5n5g0tY2LZiVrovRELp7N
      iZdf5+jsYkavnie2YBn6iFRW3ZM68VLnAH7bfhauXk5CqIyRvi58qkgipWOcOt+IRBmKw9RC
      ozSdh2OVYB+iqqETl6OZvsFBaqqqSYpPw9N8jMtjahIj1QjOYRoGFSyL0ATU+oAKZIgkMnRR
      RlJS4lGGqMjOyUXmdaKNSaGopBiNf5TegVFE6gTys5OITskmVm6h3+wiPquA3Ox0kmIME4ce
      pCHoouJIT4hCLgaRWILWEEFycjIR8RmkGQRMfUPI5TKaBl18YckcUrMLiJZYMQ2O4AuJJj83
      BbVKRXhMAinxhk+v2neQvwqRTEV6TgrW7hYG7TJmzp9PgiEMiTKGVKOYrrYutJkzmT8l7cbd
      PpGYUJWaaGMEcrGDPS+9BMlFxBnUCLYBWtq6EbTJLJo/E12oFJHNxJmqesatYqISVNjGrITo
      YkhOMuIa6qXbNIjVq6B02UrSIkMC8kA+V8pwpisVnOu2oQtT0Fx5HFvySp5aU/KZJkcF+fvg
      G67hZHcss/PDA97B+TT4XBmAxzZM3ZVaBsedhBoSmTwpA21IcHwP8rfjpgbg9QaPWwW5PQhq
      gwa5rQkmwwW5rQnIwfZ7XJjNZvwyJQbdROEywedlzDyE0y9Fb4hA5Bln1A5R4YFtP30UguDD
      YRlnzOYAkYQwtRZ1mCLgggcfxOO0YLYJn7hdQf46BL8Pu2UUv0KHOkQCfjcjQ2ac74v3yEI0
      GAyq96RRBD9Om4Uxix0fIkJUWnSqEMQiEYLPg2VsFKvTizxMg0GnRCT4cVrHGLM6EcmVRBjU
      n24qhKO3hmf/+w+IYot4+uknSVBLcAy38vLPf0TFaAz/8exvCL22hWd2+Nn0m6/c6nd0A12X
      D7PjWD0KlQqJyIdYm8pdyxcQqf7rFsNtF7fy461u3njua5+oXUH+CvxOqsr2cbL8KOrlz/D4
      zHDwjFJZfpSO0QllQWG8nRZm84NvL7uuDAe4Bzmx/yhdZjsCPhwuCYvvf4ScSAXNlQepqO7D
      D4Sq07nz/vlIemvZtecUTrEY27id/OUPMy83MiD3JvBIsD6HpHAnHf1mEtQRjA60oTRkE+qy
      ARCfu4in1BOLZ8HvYcTUi9nmIUQbSZRWzuCgmfBIHeZ+E2FRqaglDvp7+7B5QBNhJEIbimCp
      5/XNp5n6yJMsyI1GJHixWh2EhorxOi30mwaxu33IlTqM0eHI/E76TGbkYSIso3YU2gjUEhdD
      w+PItdHERGqIzVnI/3nMDfgYGzDhkIQh2EexusVEx8ehUUjxumwMmvqxesWowmSEaKLRK4O7
      T58Ua3stI7pc5k/r4t10MEUUi9c9OPG3382VA5tISJ7GDSImUj0zl65ioTIUichH29GXqWge
      Jkfr4+wlCwvuf5QkrQyP040YgUvnjxMz+2Hm5+hwm6/yyqv7yU55hNjQj58FAv6VRVIF6UY5
      Le2DzE6PoL/tGuHZWSj6J7L5zJ1VbNgxyMyiNPpqDvHy3qvEJsYgN6QyPzuM//ntFpYty2b/
      3jOs/M6vUFVv5nCzm1i9hO5BH2u/+CjahrMMaSczJdeIRAwgQ6OVAT56Gy9zvLIDsdRPa30r
      Reu+zFx9H//znxuYfM8XkPU1cb5unHkLpuDuq+N8ZxhP/ss3kHVeZv22PmYWxVDx2i8pF09l
      fpqU2gsX0cx9gq8uSufc7g0cb4fU5HAGqy8QseqHPDg1AL2iIH8RVWoJi1LBVF5+0+edI11U
      mXWsWqS9MdYjkaPRyMHvZbCzgfNdAgV36nE176ddpkN74A32jwtkz1zMvMmxuJw+DFF6JGIR
      oeF5xBv2MWh2Exv68ZXybmGYE5ORl8mF8lbcXj3XmuUULopk34kPXGbrYOfWMvIf+jF3Zqvw
      +XzY++rBM0Cveynf+clqwsZq+UV5Lw//5Htkhbo58eqv2VfRwqowC1KlEYUYms9uZ+v+s3Q6
      jXz3u98gPmUyMyR6LA4X4sEmqmrbmTNbgUisZ+rCpaTYi2npeI7MgtlkL82m53vrMdt4X0lW
      QCwlJrOYJctTifF18Ua7CUad7D8zzN3f+T7FseNsqj5HcP/rs0CgveEy+qRCVLIPOyvWkTo2
      /nYbgwoD+dNmkayXY20zM+6Qkr14KTPE45x4eysVqq+RnJbC3n278E5KROy10zzgJtYXmHry
      LewCidAmphBpaqeptZUuXTpJ6ptMMbZx+uwhxMZoEIvFyGSyiTPGgoZpc2cQY9Dgto1il6mI
      VskQS+SEG9T0DgygVGlxj43h8EH6jDV861/vRz1mwet101Cxk817T9He1cuY0w/XD1GIRBJk
      MgkisQSxTIJMKkEkEXNTcQ0RSOUKJOIJ4VZBEGC4nyGpAYMuZKJeceBfSJBPgquP6gYHkwtT
      brpgVRny+OqPfsi3v3oP0aNV7KnqQanSEJWUQ3piDFHxWcyZnU53m4m4oqUsLYpi0NTHmDeU
      SK0MhTywsyG3tg0akkBR1hjb36okoyCDmyovGmIpMHqpqenA7fVisVgnSqPKQwiRTnxQbXQc
      0b5h6rrH8TjGaWw2kZORTFRBKXG2Sg6fvIbHLyD4/ROjscdBbVUr6QuW84Vl80gNsPhBQBiM
      GNwm+gYseJ12rG7Pp3XnIB+F4KXl9Emk+aUkKT/8S3qsZrr6BnH7IFRtIDEqhN7+ceRZU1FV
      H6LWZMXvsdHbNoAyUovP40KfMoXlyxaRaxjBEzabxMhP8TyACBESiRhEUpLzsmncW8Vdj2rB
      I0YilkxIFIquXyMNZ8E9a3h103p+Vq7AmFfKqgLte9cB8ogM7lkznTdf/BVliFHGTuWBknhE
      SjkPPLyCnQff5GfHBSQygegpRei0GgpLUnnxjRfoTs4g3OtFbBCBSIRY8l7Ot0Qsvj6CixBL
      rv/9TrsAsVjyrgalSCRGIhaDPocVd8Sw+/fPcjErFbPVTXpAX12Qv4yH5vJdvHniKrbBVkyi
      TvoqDNz1+LfJCh3mUo+XGSuj3+0TgiBw5fg+3MnTydfZuHh4Hw1dQ3gFMWHhCaxak4pYHsqi
      xUnsf/U5dnkkxGZNZ22WAUd/Fdu2HcRk8xIWnsa6B9aiDnCEDApjYaWnw0FEXDhYr/HCs+sp
      +Of/Ym58cBfos8Rva+HNnVdZvOYLRASwe/NpEfyV8XC1fAeXOgdwegWM0+6iJDb4tXzWiCR6
      5t+5lPDPsPNDcAYIcptzUwPw+/1BAwhyW/C5Og8QJMhnTTAbNMhtTcCrPb97jJN7d1LdOYo6
      sYAvLLmDCOXHK28FuX3xWHo5vOcATf2jKMLTWLJ8MakRYfg9DupO7+fElX6SSxaxbFr6jXUk
      BDdtl09x9PQVrD4Z6VPns2RaFnKJiL6Gkxwoq8QiCad0+Z0UJhpwWfs5e/QI1a2DiMIiWbpm
      DRmRoQEFNQOaAXyOAbY//3POO5NZfd86Ut1V/Pr32xh0BIuVBvkoBIbbW9BMKuWBhx5lUa6E
      TS+9jQWBjgs7Od6uZtXqJfgu7WZ/g/nG9BPnEB3mUBauvo8H1y3Df2k7++rN+IfPs35bIyXL
      72XtgizObnyFK2N+bCM9CBGF3PvwQ6yZn86BVzfQMhpYKkRAM8BQ0wUOdal59qm5RMohftW9
      VP34Z5TVLmBBZCsHzntYWhLG27saSJgkwqG5g1XTk3Fbh9i76xDZs4q4dLyahQ+sI1rUw8bX
      zlG6djWJ+qCU4T8uIoyT52C8/l9kWDb6w+dwYqWhapjZD95Lgl5CzD0z+N32Why5pbwrjRwa
      y7wFsdf/8TMpXcdJmxufqQN/7h3kpcQgJpqipH30DfmZnFbMvMR33khLnKoMp8sPfErCWIP9
      bSjCM4h4p4xlSCw5CSFUd/YwKm7lVEUrzi4poqgSIsMGWP/2ERZM+xL2rnOcbrBQelccqfLt
      /Pm1Q2Q7zuIqeIJYXdB9uh3orj9DXWsvba3DZK+4kwjGGLEZmXJdMlEakUzk2CmswPu1wd32
      fi6fvkx7XzfD4mTunxeJVLqI3PJX2PZ2BxrfEK3eGTycLAG89DddpeZaK93tbUTOfJSsqMC8
      +09lEWwfczDrvm/yxCOLmZxTSMx4LZXdbrrq6jAWlKBWaZi26mFklRs4NJ7NvbOTkQaLcNwm
      iBBLQ9GpBHp6Jyq7B4xYQqhSjWh0gAGbBzwWvGINCpkYsTwMpeDG/j79BolMgcagxdzefsPj
      f4mAzCTKmIpruJohN0TKQXB2U9fpJn12IlJfPUpjKulGJWJAbMhmRamRPUf2om9zMufJAuQi
      Afu4CatIj7u/lQGrD7U2KGZ7OxCfM4P4HEAY5e1fbqB6xpcxKE30jPqI0kvwDrUzqDXywaq+
      8rBopi2IBsB9dSc/O1zPw2H78JQ8zf1TlAC0HX+Rt8/28OW58URn5BOdkQ/Awc3/y6WWbOZn
      f7wiYUAzQHh6CUsSLLzy1gm6TD1U7NrGYNRs5mTf7NCIhLRZC7CUvUa9ppC8KCk+Wz+7X99N
      7iPf55/nynlp83FG3cEF9D82dq4cO8bFxnYGhoZpr7tMkzuMiBAV2UXhnNxdRld3C3u3niV1
      ziRCBQGX3YbT48PR18ih42foNA0w2N/J6cprxEYZiE7LoeXUIZq6+zF11HHq8gCp8QY6Lh7h
      RNU1+oeGMLVfoanHjV4dWLGVgKQRxTIl2SUl+NrOcuL0JeyGQv7p/qVEhEkRfB5EighyM+MR
      X9/KkslUtF8+RfzCdUxL1GEZ7qDVZWT1/ELiszIZa76GISEVXVhwHfCPixR1qJfz5Uc4c/YC
      7aNyFt9zN2k6BVpjOkpLHQfLazBMWc7ygjjEIhe7/vQ7xiJzSI3V4+htoKysnKraFuRZi7hn
      Tjph0dkkK/o4caSMqlYzk5esY3aGHrkcmi+Uc/zUeeo7x5i35hHy45R/H2lEr9NKR+MpXtvR
      wCNPfYW0YKHsIAHgG65i3xUli+dkEPIZVgv61A3A2tfI4YpKUqavID9JGww1B/lcE0yGC3Jb
      c9NdIJfLFTSAILcFQQ8lyG1N0ACC3NYEFAizd1zkx//3eUSJadcDFlGs+tqDFES9p7fZVbWT
      Z3cN8ceffImzL/8bex2L+N7XF34owCEITq5erseYkUe4KpgLdPvio2b/H/j1ThvP/M+3SAx9
      X1/wWrlUdoCySw3YfRKSixZz75JizNW7eXFfDRPeuY8R0xDLn/4FSzMnAmP99RX8/vnnyP/G
      JtbmBda3AjIAAQGRJIWv/OhHH1BMEPB5PHh8ftxuD97rWj3ppfex1mtEAQiCH4/bg18QkEhl
      CL5h3tiwgWVP/oCpaeHIZDLEwayI2wtBwNlTxfkBHUU5WkQ3LDcFxtouUjmk5YtPf58wj4nt
      63dQV5zLlCmr+eGU1YCA39LOxi2V5CeFAQKC18zFcy1MLszlVrJsPtHpb9dwE6/8eSO9vlDk
      nhHGPBPmMVJ7jC1dk/n3ND1tp99my7EGZCEyUiaXorddpqm7G9fGP9NYNIu1Kxaiu6nAUJB/
      VDyOIQ6WNVK6aA7nd5/80POWESsR6VnoQ6QQEkdpUQiHm0eZYrwe3RX81FdeIrygmBiFCMHn
      pObwAYTipRR0vsKVW2hLwAbgdTXzp2eemXBplEk89NhKzEd20m9cyL88dAfD1Ttp3TV8w2vs
      5jY277vMnV/9FsWJGuw2DyHKNE5WNHDn499kepr+Fpoa5B8CwUfnlbMIqSWkGEI5/6ELRETG
      G+ndfZ6rMRrCpS7aeoaxRrrevcLntnKtZ4yCZXGAwGhPIw22SJZlRzHQeWvNCdgApIr0G10g
      t5mt7V0kzH4clUyC+V1Rqvdw2LqxeKNJjtAiFktRqWUI/g+V+Q5yG+EerOPN7ReIKLSyrd1G
      df01rPsMLJ83l6SIiRFeETeFB5aJ2XdoBw6plmgfqJTvZBQIDNUfxhZeSkK4ArBQ8dYWmmVZ
      7HtrC8P1rfS17CRONpfpGdEf256/3gWSyNBrNfQMDeDxR+BxufB9IHQQEhqHUlaBacxGuFKN
      2+VBKpcgFftwe33XYw2iW/LZgvz/jUSTzINffRS31w8eM/2dNvLysjAo37do9XsJMebx4BNF
      eO0DHNq8n+JMLQA+Rx8nzzmZ9UgqE5lkCmas+RLZrglJyy77FWTx+SRFqj/03jcjYAPwebrZ
      8eKLTDgteuauWUrJkuWc+fNGfmvKwiD04fDdmB2qNCRz97x0dr3+EmfCNcRlz2LhHZnMKozh
      yPZXGSi5gyWl01F/vIp1kH8QJCEaklOv7x66BjmvbyY5KR5ViISWS6dxG3PJMXg4e/AozYPj
      +H0CEVkzydFPLBS7a2twpeaRGvbODr6cqKSUd1XARdc0jCWkYtQFtgsUkDDWOyWSXN53Upil
      6CLDCZPCuHkEq8tHaGgIHr+YKIMGj20Mi0+OThOKyOfCPDKK0yug0hpQh8rwumyYRy2I5Er0
      Og3SYDTi9kTwYbE4CFUpEXtMbN1Uxoy77yVJK8FuGWXM5kQsC0Wn0yKXTrjYLrsVn1hBWMjN
      M4k99lHcUi1KeWBuRVAZLsjnAr+1m9bxcNJiA1Nz+LQIGkCQ25qbrgFksuBBlSC3B0FpxCC3
      NcHlZ5DbmoC2QT2Wfs6ePcfA+DvlgzSULLqDJG1gB48BxjqqqB0LZ1p+IoE5WA4az5zHHltI
      UZI24PcBD921lVQ29uBFhDYmjSmFeejDpPg8Ti5XlGMouoMUvfIW7hnk08TvcdB85QL1HcNI
      NfHMKS1GI/uASojgxz7cQc01O5Nn5fHOr2Uf6eTChctYJJFMm15M1Pv20N2WQS6cPUVU8Uoy
      wgNTHQloBnAPt7H1lUPIUlJISUkhJSUelfzWYmgDVw6y5Ugd7o+6wD7I5t/+mlPd9usP2Kg5
      uo/TTSO39D7gpv74dio6ICU5gZG6/fzi+TcZ9Qj4PU5O7tpOw5DlFu/5fkY5/MIv2Vs39gnu
      cXvTcGIrFc02YhLiCRu7xMa9tdxYmc1LZ/UxXtz4Km9vPsXoOw/7bex7czOD6FHZm3hjVwXv
      qnMKPq5dPMGxfVu41BugKBC3EAgTSzTkFBeT8U5bnOOcPVyOcfockjUKRrpquNghYcnsHEa7
      ajlSXo03NJqZ8+aQaHjvYLwgCFwo24N+8jzSo9S0XTrCgHIymp79HD5eQaRbRXNiFuvWzmTK
      0sUM6HUg+LENtHLi5AWGPQpKSheTHaumr/4kjVYD6rFrNPa7yZ21iIKUiRHBkJBF8ZRJFE1K
      xvvfP+D1k/P5+pxw5ty1BpVeibO/gfIrDqZN0XHyTBOFs+ahsjZRceYyY4KGqaVzyTJq8Lks
      1J47QU3HGPr0EnJldew9VoG3X8l4XTLz71qOMZjMd0skzlhDtko1MfoWqmj8rwbGVxfwnoqP
      Has3jse+/ihvPfNespy3u4J25UKeWjIFBVNgwx+51D+fO2LE2LrPc7YjlIUzs+m+hX3UgNcA
      fr+druZmmpubaW7vweHz0FW5lyPVgwDUHt3OmTYz463neP6FXagyi0gK7eP3v9tIv/V9474g
      ULFnM/V94wA0ndnNido+IpNziDFoSSuYxswpmSjw0FjxNscbhnCOdbH+d3/Cok+nKEHMxj/+
      gZo+B901R3h500HkcXlkaPp5bdNezM4b2y1ShDO9OIXG89WMe5ycfnsntQPjOHuv8NaWt9n6
      1naudA7htvfw6p+3II7NIzfczsYXNtPt9lC1ZwNvXRonvyifMNyEJ6WTHK4lMbeEaSWT0AQ3
      zG4ZlUqFGAGHuYdj28uJWToN3Q1XaMgtyUYjv7F7jnd3os9KRyECRGEkpajo67fitQ9y5Hgr
      05eVYrjFIyaBy6P7RqisqKADIMTIkhVzmTE9h+cuVmObY6CueZip96bRULkBR/xslk2dhM8S
      wdmj/8Ulk/XdmeOj0EbEoVOGYUxKIzNFDdje++AtJ2kih4dmlhAeOoWiU9/idG0bRUBMZiH5
      ORmMCDW4ynvwfGj2E6MIUeD3ej9UANvhtJE4+3GeyIrHVbOJo1eHcUWepM0/Rn9TMy2dCzh1
      vJk5T32Z/Myw6wGaQSLVoTjjUklL/XjlsSA3QfAz2l7Jtv2VRBbO486S2ABkbMHv8xHyvoMz
      coUCv99He/UphMRisqPUtN5iUwLPBpXFs/rxx2/oyP4ps9Dt28G12jDa3BksT4mkt9aNVDbR
      SJFIhFjkx+X5ZCpwfrcHv1SGSPxOo8W4P9zTb4rgs9LQ2EVsznI+uOxV6uLJzYxHIhLhdjhQ
      xWSx9K61RMpg3X0SdKEjVIhEyINxkU+V0a5q3iq7xty77yfVqL1poeyboQ6PpL+pG19hBhI8
      9PUMoy9xc3lbFWeHL3DxsJjx7iuMqn6O5JGHWTM99WPv+Ym2QcWaTCYl2Dm4bTdhhXOIVUtI
      zSlivOE0zaMuBjtraHFFMtl4Y9dTSESMO1zYR7po67s+0svl6JVg6hvF5/PdIKKqSi5EN1RF
      Q88ozv5aLvaJmJye+PEhc7+X5rN72dmoZM3czA9Zu0gkeVfNTpdVjHKwirZBH1FRBgRrD4O+
      JKZkKKk4dQ6nx0VnVx+CEILOIGewrx+3z4c/qPB4i7ipP3WalHl3kR6jC7jzAyjSZqK4uoe6
      PgvmtnOU90SSn2Bk3Xef4Zc//xk//elP+cbqKaz82vcC6vwQoDSi32Wlo7uGEweOcbysjLKy
      WvR52cSolITJHZy/YGblI3eToJKijE4lN9LGllc2caHdy9ovPkaeUY17zIRZEkdxTiwxeikn
      9+2jblBGXJQMbUI+OSmxZKRFcm73mxysNjN1eiaO/j5EMZMozExhUqqaozu2cOB8O/Mf+Dql
      2RE4zL04Q5MpzIzG6zBjsigozM/APWLi8pnjHDtRQbc/jke++ChZUSEg+Bjs6SMyt5AYmZM+
      SwiFJZkTstwh0eSnhXF6/04OHDvHsMRIQU46mZNycdYfYfPOMkziCKZkpZCQmczVg29QdqGL
      1KJCtMEJ4hYYo6rsNCdOHuP4sTLKyspo7JGSmR/D0fW/o1eVSrKolz/+8QV27j1Dv9NEZfkJ
      Wi068vIyyTCKOLh1E+XNPlbcu5oUXcgNA6HL3IsnIo8kXWDboMFIcJDPBb7hSt4o97JqxTTU
      AWZyfhr8P4KvIbHLrKckAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='66' name='Free Spin per Casino' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hours wih more Registrations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hours with most Transactions' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='66' name='Jackpots per Casino Games' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABCCAYAAAABpNnUAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEKElEQVR4nO3cb0jcdQDH8ffiGvNP98DcH4nNFTVy6bLuGmzMmBcJxWgPHPZgbZOTMLYo
      GuUEl1Igro10BA5WTFYkscDgmlswSWSIiJ3Lpulwj1Tk5h98cHmn3A7swaROmBPvd3dy+35e
      D3+/H1++D+7N73t3399v3cLCwgIihnpirScgspYUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhN
      AYjRFIAYTQGI0RSAGE0BSHIKjdHWcJxDhXtwOp0UFLmpbhkksMphbHGZnEg8BXppKP2QX+yl
      NFw5j3PTekKTXn5qvss0O0lbxVDrtB1akkuYwcYSjrbkUX/1C15fzaf9IbQEkiTzF9daRskq
      fvfRH/7QGG11booKnDideyg8Us2vw6H/z9+swek8rAAkyYwM0OeHV/N2PuKiCVo+LqH6joOv
      PN14u3/nQuEIdcfep3lk6ZUKQB4/vT/Q+EcWpVUneCXDBrZUctxf8sFzf3Pp594llyoAeeyM
      3xnATx45OyKPZvPs8+DvGyDyJqAAJLlk55Jvh1v9gzEZTgFIknkZ11tP42u5ws1lfvR/5sVc
      7PQzNBx5dJihfrDn55IdcVQBSJKx4TheQ3HqDao+uoh3MgSECfq8fN/gebC8cRzlxGs+Ltc2
      8udMGMJBhppquex7ibISx4NhMjeRhU//A0iSCo3R9nUN528MMfHPfVIydlFY/imnihf/CFs8
      f+76bWbmnuSpnDf55PPTvLNj/eIAfnoayhWAmE1LIDGaAhCjKQAx2oq7Qb1ebyLmIbIm9CVY
      jKYlkBhNAYjRFIAYzWIAYXztdbiLCv57LrOu3Uc4NnMTiTtLAQS66iit6GBrpYdubzeeyq10
      VJRS17XaR5NF1oaFACZobfLgd52kwpWBDRsZrgpOuvx4mlqZiN0cReIm+gACvfT0wd79+yKe
      wk9j3/690NdDr24CkgSiD2B6intAevrSJ5PT0tOBe0xNW5uYSCJEH8D8HMFlTwaZm496ZJGE
      iT6ADSmkLnsylZQNUY8skjDRB5C5kS3A7OzSxX5gdhbYwsZMaxMTSYToA0hzsDsfujo6I97H
      GKCzowvyd+Ow+MYukUSw8DPoZg64D2Jvr+ds2yQhQky2naW+3c5B9wE2x26OInFjcTdoGF/7
      OarOXOf2zBwpGbt4u7KWz1xZeuuuJAVthxajaTOcGE0BiNEUgBhNAYjRVvyxJhhcfsODSLLT
      HUCMpgDEaApAjBaTAEJTt2g+dYg3ypoZjcWAIglibcdCaJz2b05z5rdxYJ7722MyJ5GEsXQH
      GL16gdaUI3x39VuObY/RjEQSyNIdYFtxLfUAjNIZk+mIJJa+BIvRFIAYTQGI0RSAGE0BiNEU
      gBhtxUcil98NOkpz2XtcvPvwsy+U/8ilw9ssTk8kviwEIJL8tAQSo/0LG2svqyma8nIAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Live Events per Casino' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Most Popular Casino Game' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAYkElEQVR4nO3dyXMbfX7f8Xcv2EGAAFeA4KqVopbnmXnyLDPPjCczGZfjpOwcfIgrlZOr
      nFySfyFTOeSYqVTllENy8cHlVMUVZ8rOxPFUxpM8fux5FlGiSErcdxIriX3r7hwo8REpUCIo
      ECLY39dFAvjr7h+a/PSv0f3tbsWyLAshbEp91x0Q4l2SAAhbkwBcCRbLT2f4+tEc5omf5JMb
      rO0dNJwqsf6MX/z1ZxwUq6fM12B2dh6AnfVlsuVa67p8SSjyHaDzVYsJfv7LWX77Nz9lZ2OJ
      J3Mr3Lo1wcpmgptDARJFjc3tHbxeLwNdGnvpIh9+97us/M3/oBK+wdrSKrpTY2QoSiadYqAv
      hCM0QnZ3lXKlRMClMT09w3vf/R6p3W0ig1GeLSwx9e1PmIiG3/XHfysyAlwFlgWKiqqqrK+s
      kd15SqripJRPk0mlyWRS1PQgB8ltFld3mOhRWdjeB2AtXuD9a2E8A9fZ21jl2w9us7KdZu6z
      n5Ez/SQSOyxtJLg9EePxF59Twkk1l6TiCHf8Hz+A/q47IN6e09fHjaFNvpqeI9gTxlKnCPl0
      yoEgwb4oXnQGTB0qHrwO2Ejk+HAqzD63iA5O4i5so5l+AjEX00+W+PiT77D08HPuPLjOht9A
      rZfYSxf4wQ9/xLOFVboHYtzrdb/rj90SF7oLZJomqiqDjLi8LmQEsCwL0zQxDEMCIC61pgJQ
      K+f524dzfPrxB6wszJPJ1RiN9bC5nSAyMkFiaxnFFWDy5gSapgEc/SvEZdTU5ll3egkH/YBC
      IBigUquT3i9y98Ekya1lfMEYHgzqF9RZIVqtqRHAskxqtSrVWgXV4SPoMKmaBqlECs0doFjI
      YNWryDZfdIqmvgSXC1m295J4u4JoRhlD8zDQE2B7J85gJEIuk0BxBwj6Do8QGIYhu0DiUrvQ
      o0ASAHHZySEaYWsSAGFrciZYdIx/90e/wjBOlvud7g/+0beI9na9to0EQHSMr57uUGsiAP/0
      R6dVuX5DdoGErUkAhK01tQtk1Mp8PfOUD95/wOriPNkyjA/1sLyxw+j4DeKbS6iebq6NxVAu
      qseiI2ULFb56tnPm9qqq8P0HoxfYo0NNfgdQcbkcAIyMX2P28RzbiQx3p27ydG4BT9cAVuWA
      umWhPi+Gk+ttBMB28oCf/tfPz9zeoal8Z2rorZZpGAb1+usLc5oKgOZwoqsKYPFsfp6JyTvs
      ri5QKpVAc1KtlrFqNVRFkWI4ccx5/g50/e2O0Wia9sZ5NPUdoJjNUK/VWd/eRVVU1pZXGBof
      Y2cnxfUb1wl6LMKDQ1ILJDpGUxHzBkLcuxc6fBGNHL1/48Z1AAZjF7/PJkQryVEgYWsSAGFr
      EgBhaxIAYWtSCyRsI5MrUa0Zx96TAAjb+OmffM700t6x92QXSNiaBEDYmgRA2FpzN8Yq5fn8
      4Szf++RD1hdmqLr76XHVWNtOEBkZJ7n5/MZYt65JNajoCE0FQHf76AkdXmIWHYqxHC+S3i9y
      78Edns7M4usehnKGmmWhSTWoeIlhGG9udMKbKjnPssyX59Hob7GpAJhGnUq5TLlSxaiUKVdK
      dCkGib04midIIZ/GMmroioIq1aCXyuPlPX75cO3M7T+cHOLDybcrR37ZZagGVZRX90uaWkK9
      WibUHeIgl8csVwm4daJDo6QSSW5cGyKXSaG4/PLF4hLajGf5yy+Wz9y+N+htaQAuq6YC4PJ2
      MTb24ir7bx6OEIkMAhAM97asY0K0g2ysha1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      NR2AXC4HQCG3T+Ygj2XW2dnZxbQsDjJJcoVyyzspxEVp6kxwtZjj1w8f8cPvfcTKyiYKFmmP
      A1+Xn4WlVerVGpaxx517U1dqaDkolPlPf/ZlU9P869/7CJejdRfc/eyzZ8ytJc7c/qM7sbbc
      W7PTNfUbcnq7iPSFgRoudxAvZdIWjA30k07M4gvGoJyhfsWqQYulKv/38UZT0/yL3/kWWgtr
      wufXEk31oa/be+zemqZ59vvqv2j/ttWYL7sS1aDFbIZ4PI4vEMaqZ0iYTkb7u3g8PXvsegCH
      oqBcoWrQc1UyavpbVzO+TFGbS5OqqMeWr6rNjcmqqra0/1eiGtQbCPEb3/+NwxfRgaP3Q/2H
      W5qB8Pvn6acQ78xV2lUXomkSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBha+cMgEV8
      e52t3SRGtcTCwiLVusHu1hrx9EFreyjEBTpfsUW9QDIHSnmb3IGD2NAgiwuLaLoHa3+LnnBQ
      HpUqOsL5AqB5cbHOZjJD33AEj8cDRhWnN4RlVTAtC65QNei5KhmNOvV668pBLbO59Whax6s5
      pRq0BdWgRxQVTVOJTowT6fYw8+QZo+M3iG8uobq70aUaVKpBT7gS1aAvG7t+++j/D0J9AHRP
      3j3v7IR4J+QokLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLC1hucBqqUD/vqXn1HXXHzn008J
      eJzt7pcQbdFwBHj0cJoPvvdDfvDJe8w8ftLuPgnRNg1HAF0x+Is/+28ADF2706CFyZNH01RM
      B6PREBvbCaIjEyQ2l1HcASZvTsiDskVHaBiAnr4BwgdVAPp7expOWK1UqZrm8wdlT/J0Zg5f
      d+xKPihbiuHeXkcVw0VGrtMbHT9soDtebWBWQO8iSJm6ZZCMJ9HcgSv7oGwphnt7HVUMpzuc
      PH36mMmpu6gNJkL1MDHaR8Vy0Bfys7Ob4Pq1cfL7SRRXlxxaEh3j1IilN5/xR9NPeO+Dj7l/
      a+yVnwfDfUf/j0Yjr7wnRCc4NQCh/ihajwNP5+/BCHGqU/dWsrk8M1/+P7aTco2vuLpOHQFu
      TN4nGAzgHxxpZ3+EaKtTR4DZma9Z282wvbrYzv4I0VYNRwDDqDN15x6Ky4/DIWUQ4upqGICt
      5XlmFtYxjRq9sVt8/P7tRs2E6HgNA+Bwuenq6sKsV7Cs5s/gCdEpGgagu2eAW+4Amu4kHAq2
      u09CtE3DL8HrG+uk0kmCAf/hTa6EuKIajgD9oQB//pe/YHb2Kfe+/TE3RyPHG5h1Fp4tsr61
      x+StEeLJDD2Dw6S21lBcfu7fvS3VoKIjNAxAaGCY8dgglu4hnUrDyQCoOteuj2HpLkrFOvcf
      3GX+8RNCfeNY5bRUgyLVoCd1VDUogNvtJr6fJ9Lb+ETY9sYGg7FxcrsrPJ1fwN3dTya5DrqT
      Ubk1olSDntBR1aAA3/ro+5iWhXLKiouMTKBpGl2j1+ipVHG5XNQHe1FUXXZ/RMdo+NdtGjW+
      +PLvKOQP+Prh44YTvki0oqi43W4URcHhdKHrnb/FF/bRcASo5DOsrKyRy5e5+94H7e6TEG3T
      cATwBPsZ6PaQSafY2Uu0u09CtM2p34xKpSKdf/xGiNc79UvwnXvvk8wc4HI0uCZYiCvi1BGg
      Ui5RKBTZ3dttZ3+EaKtTA+D3ekjv57l3b6qd/RGirU4NwPzSKh99cJ+ZRzPt7I8QbXVqAPpD
      Qb78apr+oeF29keItjr9oviKwY9//EMO9rYa/nx7fZn5xVUK+0kePXrEfr7EwvwTFlc35eiR
      6BinHgWK9YX4q1/8ivt/75MGP62ytLRBaDDKTjzN1NRNns4t4Onqx6ocULcsVCmGa20xXJPr
      8fIVwzW3fGhFMZx5/mI4Z1eY3/qt2yQSCSBw4qcqgXAvIb1GoqpQKpVAc1CrVTDrdVS+Kb5q
      tgjrMjpPIZemaS0tBGxUyPU6qqIeW/55iuFa2X9Na/7v4G2Xr2nHP8OZi+EK6W3++I//hLGx
      cYav36Ovr/+VyUaiPeyXTO6Ohlhe3eLajRukdzdQQ0NoLy2o2V/cVaGgvPPP/rbL7/T+n2Ue
      DQPgC0f53d/9J4wMR9mNN74xVqhvkNDz/9+8eR2ASGzs3B0V4l04dRdofWmOZGKPCl4ig3LP
      T3E1nbpjdm1igp29FJHIQDv7I0RbnRqAlY0tpu5MEvB52tkfIdrq1AC4VIuHDx+yFU+1sz9C
      tFXDACzNfU0qV6ZcLlEqldvdJyHapmEAokPDbG3vEI0MUioU290nIdqm4VEgpzfAxx9/QsDv
      I9AbbXefhGibhiOApjs52E/zaPorph9Ot7tPQrTNqecBBnu6GRgax+V0t7M/QrRVwwAszX3N
      2naSvfgMtx58yFCk95U2Tx59heoJEQk6WdtOEJEHZYsO1PjWiN3dTM+t4fV6CIcbPygbLKrl
      Mgmrzt2XHpRtyYOyAbk14kkddWvEZysb/Pg3f4xKnemZecYGPzrZNQYiY+xtrGO6PaQSKTR3
      gGIhg1WvyoOykVsjntRRt0Yc7OnmF3/1vwG4due9Rl1DU+r0j03Q2+1jeyfO9Wvj5DIJVHdA
      HpQtOkbDAIzdus/YrfuvnTDU+02N0NDQ4aHS7p6TZdNCXG6ysRa2JgEQtiYBELYmARC2JgEQ
      tiYBELYmARC2JgEQtnb+AFgmBwdZLLPO3l4c07LI7qfIFyst7J4QF+vcxRaJ7Q3mNpKM9vpw
      eL0sLq1SrVTB3OXOvSkZWkRHOFcAzFqRR3OL1AyDrN/HnWuD7M/M4g/GoJyhLtWgUg16QkdV
      g76J6vDyo3/wI1ZWVgl6dR5PzxIZHj+6HsAhD8qWatATOqoa9KzGx8cACA/EABjoef9tZidE
      28muurA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsLVzBsBiZ2OF1Y0djFqZxcUl
      anWTva11Eulsa3soxAU69wgQ6h0kl9hlcXmFgYEQC4sL7BctUjubNF/2JMS7cc5aIIVi7vk9
      QC0dr9cL9QpOTwjLqmJaFkg1qFSDvuRKVYOCQSq1j+50E+0PMvPkGSPj159XgwbRW1wNWqrU
      qNbPvgKduobH5Xjr5b4g1aBv74pVg2rcmLxz9Ko7fHhLxNDk3fPN7g3+y1885Od/t3Tm9v/w
      4+v8y9/54EL6Iq4WOQokbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBs7dznmlcW
      5sjk64zGetjcihMZnSC5uYziCnD7ij0oW7dMRsuZpqZR6PwaKDs4dwBiw6Pkn62QyhSePyh7
      Hm9wCKu83/IHZTdbCGaZVksLuWpqntzUz5uapm79M+r11g2wUgx3vmVeUDGcyfzTZ4zfuE1i
      c4V0Mo3q9lMs7F/Ig7KbLQRTVKWlhVyqrlFpsrZOk2K4Y65YMZxFdyBIfHePkes32N3e48a1
      CXKZBIqrS75YiI5x7mrQ4fHxo1ex2BAgD8oWp1O0Cnr3wpnbt3L0ee1y2rIUYXuKo4Br8Msz
      t9fV1l3P8TqytyJsTUYAm7hTivOHu3975vY38yHgYi5wukwkADax1p/jZx+tnrn9P47tc+Pi
      unMuzsEvUIyzHxpVHN8Bel7bRgJgExXd4sBz9nMJZf3yncjTgytg1s7cXtHe/MBGCYCwjd8/
      +IzfTswce08CIGzjT+9VmOktHXtPjgIJW5MACFs79y7Q6tNpSq5+eh0VthIZegeHSW6voji7
      uH/31pWqBhVX17kDMDwyxtJegWyhxv0HU8w/fkKodxyrnL5y1aDnqWQ0jHpL+yDVoOdb5gVV
      g1rs7ewQTxSJ9Xax8GwRV7CfTGoDNAcjV6wa9Dyf4WQ1aHnvZ1hG8czTO8OformjR6+lGvR8
      y7ywB2V3D8R4rx+8Xi/lcgWPx01tsAdFc8gXiwb+zWd/SrqYPHP7f/WDCe4PfROAm744Rvjs
      t4cc9Q401b83KVVqFMpnPwbv0DWCPldL+3ARzn13aK/Pf/TK6/UA4HS5W9GnK6loKBSMs2/F
      jROjdca1wrbnizNPn3WMnLntWfyvXy/xn//84ZnbP7g2wL/9g7/f0j5cBDkP0CGybpN419m/
      BxRcl+9M7mUkeyvC1iQAwtY6YhdoeHCO9yb/TxPt64A8H0C8WUcEIE6BBSt95vZjVuECeyOu
      khbet8Mivr1BMpNr2SyFuGgtGwHqtQKZvIGZWScUmuLl0x7/8Vf/nkR+78zz+r0Hv8+96Hut
      6hpmbR+jvHXm9orqRvdda9nyxeXVsgBYZh2Xy4tFDROOBWAtvcLWwcaZ55WrtHYUebI4zX//
      n//hzO37e0f5w3/+05b2QVxOLQuA7uyiUpg9fEpkq2baIgcui9mes9fC5Lubq5sRnatlf6uK
      qnHrzr1WzU6ItlCsC3iStWVZmKaJaZqoqkrdrDdVFaqpGqqiHk1vmAamdfatsqqoaKp2NL1p
      mRjm2asRFUVBV/Wj6S3Lom42V5no0BxYloVlWedaB7qqobzFOtAUFfUt1sHJ34FpWhhNVKQq
      Cuiaeu51qAD683V4OD+FulFr6pbDuqqjKMpL67B++BD3l5dzEQF44cWC7Tr9y7+8d9WHTp/+
      otfhhZ4Jfnmh6fgWM09mSe3nAUil0+RzOV5s06qlAjXj1ennHn/N/OJqg7kbJOLfVFdWy0Vq
      hkUumzvaSqiqytrSU2bn5imfnDmQiMeP/m8ZVYrlKsVcjvrzlf6i//F4gmw6wdrWq0eycrns
      qZ9fURQURaGQTbK+nQSzysyTp8c+95uoqopRzrG4tk3pIE7u6EYHFoVCkXopz+PHj1jb2v1m
      zVRLlGrmsc/wsuWFZ9RMg3j8zdWpJ6fPpvaYmZkhuX+2cy0vpl9+NsvMkzny2TSpfPWVdtsb
      K2SLVeKJ+LH3FUWhkkvy9aMZNrYTxOPxV6YtZNN89esveLbS+ECLqlrMPX7E7PzCK6NY276v
      5vM5/IEgLqfG3MwjMqU6scE+jEqB9fg+Zm6XenCCb98+XsVYqdYYHOhiY2ODgNdJvlQjlUnT
      F4lykEpTLpdxaCaJ3Q0qnigDfh1/oOto+mKpTHe4n/j2FpFID9u7GbL7KbzBXmrFLOVymV6/
      xmYyx9reATdiESJ+/7E+pFJJUvEdhsev83j6Ea6ubnSjgOYNo5oV9vf3cekqYLKV2MesW3R1
      h7g5cfhZSuUyiXgWj5ElX6uR3t+nVsqxmczR7XVSMMBtVciWDG5NTj6f1zfMaoF4PI63rlHr
      crOR2MDn9zE/t8CDu7exdBd+n5fF+RkK5ToBZ521op/vfesWWoPrCGrlAuubO9TyReqVMiYm
      hqWgaxrRoehrr+bb2E0wNTXF7Ows+3vgcLnRvb1Y1SymeViD32geVRNG+gPs7WxBYJjkxiJO
      XwBdVXBpcFCqkttcxzRr9Pcdv8dstXhA3/BNsjuL5FQVzaqxGc/QEwzQM9jPft4g5PMTGYux
      vrJAtmQyOXkL7agTJormxe+0WFpcwtQ0Qm6VeLrQvlogRVXx+XwoVhGXb4C+UIB8oUA8tc/t
      WzcZHOhnbGT4lemcbjdejxu1VmZ1N00un+f25B32k3scbgUL5HIHdPf0MTYSo1A4vmXSdAc+
      n5f+kJtffzmHptQIRSaoFA+33IVCnmoph+4NMjI6jlEpNtg6K4QHogz6wTcwjlHJU0djJNpP
      oZAnn8+Tz2epViuMTlyny9+Nbh0fcYJulc2cQdCtki8USGSy3Ll1A6NWZ2J8hFJNYTDkJVd8
      desIMDQ8zNbmJomdLfKVOuhORoZH6PZ78Hi9uJ1ONKeH0YEuXF1hRkbHOO0aGqc3iFI5oGoq
      OLUShuajmktQNh1vvJTVsixMy8SywFAdjI5NkE+sUjU1jFKafFVpOI9cJslutkqkN0itmCVX
      rrG5s0etXCSTL+F0OAh5VNKFBp/fMllefMrA0OEGJZ3JcJBMoHtcPPl6Gl84fNRudXUDyzQw
      TvwSU3tb1HUvTsVifHyUTGafTGIL7Sc/+clP3vCZW8KqV9ndTeDyhanm4+D00hsK0t8TYmll
      g77BQfZ24/SEu49Nl0nukS0bjI9GqNQ0RqI9LC4uExu7htvlQjHLlA2daCTC7l6cvp4QllnH
      NA1KFQOzWiCZyRIaiKFYdWKxYRJbqwR7I3T5vfhcOrvpAgPRGPn0LoFQLx6nRrFcpVwq43a7
      UFUFv89HV3iAzM4q/nA/3cEuPG4PiqKiY5CvQn9fHy63B6eu4fV5cLsPr49QUAh0h9AUlWCg
      C7/PR3+4m8XVDXp6e/F6vSj1Mvtli76gi5phUSxWcbte3CBWQXN58bp0BmMjVPNZunv60MwS
      pu4hm05QRyMUDOD2eHF3hUjtbhIOh1Eb7DurqkJfb5iqoZAtwvBQL7rLj0u18Hi9vG532+fS
      WVxZIzY6gd/rxu32cJBK0Dc0gtPpxeMAj9f3yjzcXj/DQ1FUVUF3uamVSvT29THghZwWoi/o
      Jdw3QK1UxqmrmEadiqni1FVQVfoHY3T73aiKgq4pqA4Pg5EomUyGsVgEVVVw+7x4HCqm6sSt
      KSiKQamu4NQ1fIFuopF+VE3H43FTLRVxerv4/9GJAfnwtik9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most Profitable Casino Game' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUSUlEQVR4nO3dyW+b+X3H8fezcN/EXRS1WPbYM2OP7RlPM5ikSZM0hwBFm0tyaC8p0F76
      RxTFXHopUKBobkVPuQVBWyBFDy2KaZKZzoxnPDNeYtnaV4oSKYqUuPPZepA32bJdUYtlP98X
      YFii+Pvxx4fP5+HD5+H3+SmO4zgI4VLqix6AEC+SBEC4mgRAPJNtdvnq86vMr6w/8bfp27fp
      PaXdrS+vcvXLm9hP2cPubJeZXS7t9DM1iX1YA94n/QU9rnhJTFz7mODIFUYHo9z68jM2uxox
      j4mpR3CaW3RuXGW7bRGMZmmWl1D8Mb713hVmlwpEPSq/+biGYetkgrDZtIgE/bx+ZpC782UU
      X5DCzE3uzq9i9VoU1mtkE3EKW1W+/c3vEvId/fZZ3gHEM9mWhaZpqE6HheUS01OT+Lw6pdI6
      5fUypeIap86Mc/vWNVrE2F5fomtDt1EjNnqO7sYaV959m4VijbSnS7tb55e/+phMKkRheZo2
      CbLxMJ9+9hkezaG4tMSp81eOZeUHeQcQz3HhG9/hi2tfovXGSCZiJHJ5vD4vsRgk8zk8PoVI
      MMw777xHt7aGknwTnwYX332f8+fPM+OFSCDAhdfylOsG779zAcv6klwqhXE+RKUwRyg3yqXz
      ZynW2uQyQ6RjwWN7fspRHwa1bRtVlTcacTId+ZoppxnESSabZuFqEgDhahIA4WoSAOFqEgDh
      ahIA4WrHdiKs0zOZXtnsq+1gIkR6IHTIIxLiGANQqjb563/+sK+2P/3hJX783fOHPCIhZBdI
      uJwEQLiaBEC42r4CYBltfvvhb+nYDvMzd5m4M021UuTr69eZX17jo1//mq5lc+PT/2Z1yziq
      MQtxaPb1IVjzBBgZygKwViwSCEZYLducv3iZpbkpMvEwq4U1UL1YtoNlWdi2jePs/Nwv27Yx
      TbPv9kI8zb4CYPbarJdLaIkUkWgMr6Zg6TpzM1NongCesI+N5WmGhrLYgKZpcO//+z/3Q1VV
      dF1KF8Th29dapWoeLrz9Nqqmk79wka5hEfT7aLVb+ANBHNtmZDSPpqk48vFCvAT2GQCdSCTy
      4Peg7tn5P3jvJNUBt/RCHDfZTAtXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeT
      AAhXe2m/YfYPv/yMj28t7budpqr84oOfHMGIxMvopQ2AadkY5v6nVbBUuVapeEh2gYSrSQCE
      q+0rAI7jsF4sYjkOjmOzslLAtgxmp6dpdQ0KKwVsx2FjbYVW70XN+iTE/9++AmCbXRbnljAc
      qKwtM7dUpLg8TzybY2lhgZW5abbbPZZnblNpSgmjOPn2WRPsJ50cAMdkenaJdqNJNeonkQ+g
      qg7pXI7lqQkCsRTAkdYEH2TiDakvFvftKwBGu065VsVYKfHNb3+H1dVVkrEQk3duMzh8Cswu
      jm2TTicwvOqR1gQritJ3f1JfLO7b15rgCUR47/33H/w+NDQEwKVLlx7clsmkD2loQhw9OQok
      XE0CIFxNAiBcTQIgXE0OhwCWZbNZb/fVNuj3EPJ7D3lE4rhIAIBSrclf/f1/9NX2T3/wFn/2
      g7cOeUTiuMgukHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcLV9TpPa4ZOPPqHr
      OCzPz/D1tWuUNspcv36d5bUNrn7yKYblMPHlx6xvyzSp4uTb3xxhuo/BdALHgaHhYbbrLbZq
      Vd586zJL81NE/RrFUpmeYdKzjnaa1MMsiTzI2ByZwvWltq8AOLZFu92m1e5QmJ4gN3YGo15h
      fb2IhQdfLE1p/i6ZbAY42mlSD7Mk8iBjU2QK15favl452zKIJJP0mi0GBwdpN+oM5sepbpQZ
      On0KyzQZHMzg9erYiqwU4uTb11qqewOMjo4+cXsmuzN7vK55wSdfDRYvDzkKJFxNAiBcTQIg
      XE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcbd8BqG9tYTsO
      7cYWxdImODYrS0sYlk1lYwPHga3NMl1DpkkVJ98+a4Lb3PjqJj0H5haW6FQKTM3NogdCzMzM
      MfW7W9S7BrMTX1FqSJmgOPn2OU1qgHxup9zR6/ORDMLdqsPoWJx6bYNMLsvKzCT+cBx4eaZJ
      lZpg99r3NKnFchkjEMar2MxuWJwfH2Ty9i3SuREUs0evskY2P4SpK1ITLE68fU+T+q3vfPvB
      76fu/X/5cvLBbbmhwcMYlxDHQo4CCVeTAAhXkwAIV5MACFfbMwC2LSexhDvsGYCf/exnxz0O
      IV6Ip+4C/fznP6dSqRzoJJEQJ92eARgfHyeTyXDjxg1qtdpxj0mIY7PnibAf/ehHxz0OIV6I
      PQNQKswzu7SGoihkh8cZH84e97iEOBZ77gKFonEqlTL5oQwri0vHPSYhjs3eAYgMcOn1M/zu
      9iRDY+PHPSYhjs2eu0Czt6/x+c1pAKq1GgynjnVQQhyXPQNw5sLv0Wi2WFjdxKN7jntMQhyb
      p34d2hcIkUhp+PT+C0+EOOn2DMDC5E1u3bxBU4kSS+f3bHjz6y/odkyGTo2yvlYmlsiwPH2H
      97/3fSY+/S8yF/+Q4QGZLkmcbHsGIH/qHF6nxbrnNOeGB/a4h4PigOFAq9nkwqXLLM1NMZSN
      U1hZQfeFcBwpiRQn354BKC5Nc2O6DJTxWJd469zYY/dwMC2bsAcczcvd27cIRuLoQR+Vwjz5
      /CAWMk2qOPn2fOVGz15k9OzFZzRTufzuN3AcB01VsWwbVd05onpqfPRAK6cQx6nvTdf9FR52
      b0Fl5RcvEymIEa4mO69H4KupIsulrb7a/snvv44q76LHRgJwBD66ucSHX8331faPv3UOJADH
      RnaBhKtJAISrSQCEq0kAhKtJAISryVGgE86ybarbnb7aBvw6Ib98IfFZJAAnXLXe4S//7ld9
      tf3xd9/kpz+8fMgjerXILpBwNQmAcDUJgHA1+QzgMmubDWr1/j5UnxtJoqqv1tc0+g5AY6vC
      SmmL18bzzM0uMDR6is31NYbHRikXFgilRwn7+i80EUfjX397h//8fLavtr/44Cf4va/WNrPv
      Z3P3zh0iyTzF5UWywyOsLC1SLxUJp7OsLkyTCuUJeVUcx9n5R/8ljI5zsBLIJ/t7rK+DdH3v
      +R1ah48/1wM+78NebofZ30nQdwA0X5Bc0OBWyeTKsA9VgWQux8rUbYIDO9cRul8PbNs2zgHm
      HLjfx+O39evxvmznsMfWd3dYtg083M04yFwNjn34y+1Vmzui7wAMpZMsVltceX2EmTu3yY2d
      BqOLqigkkwOYXnVXTbCqHqQmWHmibvcglWeP9/Voddt+Kap6yGNT0R4Zj3qgeuXDX24HqZ8+
      ifoOQHZ4jOzwzs8XL126d2uYVCr51DZCnDRyGFS4mgRAuJoEQLiaBEC4mgRAuJoEQLjaq3Ve
      Wxyrg54VPglXEZQAiL5tt3r89G//ra+2f/Pnf8C7rw8d8oj2T3aBhKtJAISrSQCEq0kAhKtJ
      AISrSQCEq0kAhKv1HQCj0+DD3/wv9c11vr5+ncVCiU8++oieZXPr6v9Q3DIOc5xCHIk+T4Q5
      LC6ukEklqNa2OH9xZ5rURMTParGEjYppO66dJtU5QImlZVo46sP2h77c7P6Xm2WamI9sMi2r
      /+lhrRMyvWx/AbAtbMemsLyE//QplhcXsBUf3kia8tIkg4MZwL3TpCpK/3uWmq7tKok89OV2
      gMuaaLq+qz9N6z+c2gmZXra/Eag65944z6nTr+H1eNja2iIcjWFbJvn8ILqu4Sgv/skJ8TwH
      Wku93p0rD8cGdmaT11QPeDwHH5UQx0SOAglXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV+s7APXaBjMLyzi2yfzcLF3DYq24huM4bJaLtI1X
      azI18WrqOwCmo+HrVpmYmSOSSDE3N8fC1B22OwaLkzfZaLz4cjchnqfvghijvU3PnyJiNQmH
      I1TL62RyOVam7+CPJgCkJrgPUhN8vPoOQHFtHY8/TGoox+TtW2TzYyhmD9MqkckMY3pUqQnu
      g9QEH6++R3D5ynsPfx6IP/g5e68gXoiXwYuPoBD3/NO/f8lGrbXvdoPJMH/xR+/09ZgSAHFi
      3JxdZ7m0ve92Z4biz7/TU8h5AOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqEgDhanIiTLyS
      rt1d5R//5epz7ycBEK8kw7LYanafez/ZBRKuJgEQriYBEK524AC0titcv3Gdwvom165+jmk7
      3L3+KaW6TJMqTr4Dfwje2KjwxoVLLM9PE9RtiuUKnXaHrrlTBuk4DqZp4tEcvnd55EEll+M4
      OI6D+kj1k23bT/yuKArD6QimaT4or9Q0jfNjSXT14X3u92vbNiig3qvKevxxVEWh2+2iquqD
      Nrri8N1Lww/u87SxPfE4wFhmZ2yO4zwY/xsjcRzbeqLN4/06ODj27scxegaWqjwcL/ausT1r
      OT3+OOOD0SfGdi4fp/f26HPHtle/lmnQ4+FjK46159jut1EUBduxUVCe+NtAyEuv13vwegK8
      93qO04PRPZfzs16bZNSPYRi72gyEvHz/7dHnPzfnIMW1QHFpBgIDbFVreDWNzdIy6XQSNXmW
      kbgXy7IOVNYnxFE6cABwbAorBTJDeaxeD8Po4fd7sFUfPl2VAIgT7eABeA4JgDjJ5CiQcDUJ
      gHA1CYBwNQmAcDUJgHC1I/826EGvC/p4X3CwyyI+6vETSgex18mWgzjMsR12fye1r376O/IA
      qKp6qCsZHF4AFEVxzdgePfN9UIc5tsPsq5/+tA8++OCDQ3v0PTy60DdKZXwBD3fvzpJIJlAf
      +Vu9vo3P53tuX4qiUFycY7FQQPf7adZbBIOBXfcrrS4zMTmFogeIhHb/bXOzQiAQfGJsj7KM
      NnOLRfyqTRcNr/788xiKotCrb3BrcoGe6TAQDT+3zaO6rSZoXu5fu1ZRFApLc6wU1vCHY/g8
      u8dQKpUIhUL3R0yz2UXHoGkoePXdK8D95WZ2Gty6PUGzY2IanUfa3+M4TE1PMxANUdlusr2x
      xnKhSCg6gOeRZfDocjObm8yXGnisJpYeYmeYNs1mh61KkYXlAh5/iIDPA0Cz2cTr9T7RV6dZ
      Y3J6Fkf10es0H7xGj7Mtk2a7g9freXhjr0mlZRP06SiKQrNWYmJqHguNaPjRfgzWVtaZnpxk
      s9XB69GPtyCmWqlgd9ZZrjp4Z+7SbFsMZgeo1NoEgz7q2zVSiTilrTaV4jI9y0HX/Vx++61d
      H1YazR5nz55idq6ArvppbpdpmTrhgIdo0Is/Pkh4u0EuEeLunQk8gSiqUQf/ANXiPMuBKBcu
      vIX+lA2FZRiUV1fwKTl61DAyeZqbq1i2isfrYyiX3bOd0dwkPXqO7dVpprfWCCZytGoV1EAE
      zWyyWdsmmxpko17BMDRiAzEiHptyrY3dKEHqNJfOjHB//ao328RicdqVNZx0jtraKvXtLTR/
      BNvq0ul2GR0cYGq+yPzcKu9dOU1LiTE/tUggmoDuFq2OyWvnLxL0qFi9NpFUnt5WmXJbIaAr
      LC6tEE1liQ7EadSqNLdKFNdDNLod7J5DNpVAsXvcvDFBMJrgtfGR3cuqXWO1ZOCJmWiGh4Vy
      gVAkyN2JeUZySSLJNB4Vrn/1Bb5wnNLKAqffuMTI0O6LKG9vlFF8YRLxCItzk9QbbVQF/LrC
      VtciZDcgmsPsdNA8GgszdzC1ECOpEGvFAt7smyQjfgBazQZDY2eoFBdRjTob1Sa5XIq1tSKa
      J0UmFCZ69jTV5aXj/xAcj8cZGRvDsBzyMZXiVpfR8dN0Wg1azQZGt0Oj2SaayhIJhUhFQjz+
      CcLoNJiZX2VsLAcYVDfrFFYLeByDhbUaIf/O1qFT32Stso1pWXQshbF8lngqSyoWwHrOJfxH
      xsdZWVggGB1gdfo6jj9FvbKKrfmf2W5uZpJMbgR0P9moj+12l5XCKj1LIzsQoNU0OHNujFAk
      jYpBtVpjs1QgGM0wNjq8qy9V0wmFQgykE0x+9QWoKoGBLKrZwXag0WhgGW1Mzc/oyChB1aS0
      XiaRH8doNVC9fsZycVrdh092ZWGGWDqHqkC1WsXpbFE3dZamJlA8IaKpIeqVVRwUbMvEbG+z
      sjBPZPAMRqex53MeHcmxvLzK6vIiXRs0r5/RkTFCoQChUAhdgXg6h8+jkMkNMZxLP9FHIn+K
      fDLIxJ1p1guL2Jofq9dmo97Cb3Wo2j5Wpyfw+T00Wx0C0TiRoI/N7TZvnD2N+uhl322TG59/
      giecYmF+AbAolqq88cbZXe+OzWbz6HeBHqWqCv5gEF33E1ANNrs6Y7kkAZ8fTdOIRUKsFMsk
      UxnCwQCBgJ9gKIjP79+VVN3rY3hkBK+moqoebKtHdCDJSD5BabNLLhNHVVQiA0nsbotAZICI
      T6FS7zIQixAIBPH6/DzrUvma7iMc9BKOJ9nY2OTsqUE8oTiqbRAK7f32jKKSzo0QD/vRNB1/
      IECj3iCRSuOly+JykaGx04RDATyah1DAh+JY+EJRhvI51tfKeDSwzB626sHptihtbBIaSKMp
      kB8ZoV4p4o0kSUTDJMIBFlY3SKUHsbtbeMIxBlIZttcWiaUGiYSCBAIBPB4fHk1BQSGeGiQd
      j6IqKn6vTs/RSWVyNKoVTp0eQ1dVkrEoii9KxGtTaXQZHT9DfX2RSHLwiV1KRVHQ/VECHhge
      HaO5tU0ilcXu1dF0D5VqFV8wQijox+/zEw16KW21iUV2736161ssr5YYGh4hOziEhkk8oFAn
      wuhgDNP2Ewr5SaWS6LpO0O8nGAgQDXpZLFZIptIEvPq9l0Fj9PQ5nG6DdCpO11QYy2eYX1ol
      nkgSCvvxBYN4FJX/Ax+1yySAdDV5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Payment Methods' width='192'>
      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
      vYyPxciiUn8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Casino Games over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Casino Games per Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Users by Months Member' width='192'>
      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
      3Gv+PzlJsQLlsZGJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 20 Customer by Deposit Frequency (Days)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVUklEQVR4nO3dW28cd5rf8W9VV/X5wCbZJMWDKFKiLEsja23vjMcJBjCwThAgCywWg90E
      CfIKggQIgiDIVYwEyDsIklxtFrkIkFxksbvALhIHyM56dscez3o8Mg/isdlskn3urj5VH+qQ
      C8qyKJEDdots06rnAwgg1PWvfqqqf+yqYv+fVlzXdRHCo9RvuwAhvk0SAOFpEgBxabY3n2C7
      Lk82t85dZvWLz/jkp3+F0e698IjDl59/xuMvviBXOOKw2PhmzOoqAO3qMQfFOq7r8PnnP6de
      yfOzn31Ktdl56Xlq1dqFatYutJQQF7CxtsrNlRVWV9co5/aJTy9Du0Sx3iPh16k4Fs18nh+9
      f4///Sd/SiAWY3EuRblUZm5xlv/7F5/zt959RDB8QK4eZ2ctT2xyjvUvvyTis1lb+5LInQ9I
      aQb1foif/OSnfPj3fwcjs0ravElxd5dOu8rk7E0+/vM/5bd/9/fIbG+gxyZx2hVMs0skFmIu
      mWSvUGFyakreAcTl0RQFy3FRFAXd5yOfz/PXP/sMVXHIpvd5+O73sUyDjf0G79ybJDxzh4N0
      mh/96CEbGwcsL91G6bSwFCjvr7OVa2BbfQB+ub7Nb751D1WBbr1CIDGO47qoqopZK1JpmmSz
      OTSfQqFSZ2HhFvPhNg19ltLhHseVOhPREDPzN/jVT/6cjqpjGiUUuQskLkutkOXxxg4Ldx7Q
      yO3SUaPE1DZGXyOu6yy99YD02ior9x9gFjOUSZJwa3y5tsuDd9+hkMkR0yEwHqTd8XOwvcb0
      rRVMo8xkLED6KM/snd/g5rjKx3/5S3741jKPNzMsL95ga/+YWDiO6jRx/QkSeg+iU1QOttAT
      M2j0SUaCBBMxaFT4cifPrcW5qw+A4zioqrzRiMvkUsjnmUhN41OVV1rTlQfAtm18Pt9VPoUQ
      Qxv6Ijizu0nJMPneo7fQXYvV1VV8oQQRXx+j0WJ26T5jEQ3HcZCzLHFdDR2Ajg0PF8fIVnvM
      BBokJm/Sb5Yxu11sq0ffdp/95pd3AHFdDX1y3u/1yJUaxIIqqqrTbNRo93p0ujaLCzPUjfpl
      1inElRj6GqBnNik3ukwlI3RtH91mBV9ojIDaJ1+qMz8/i6rINYC43uQiWHia3J8UniYBEJ4m
      ARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQ
      njb0nODdzTWq9Q4P3n4bv9vj8eNVfKE44xEf+aMs48vvsJiKXGatQly6oQNgKxqPbk+Qqfa4
      EagzPr2E1SwxtXCLRqvLQiqCbdvSFUJca0MHwOp12cm2SC3P4Lp+apVDXBesZhU9nDw5t5Ku
      EOKaG3pOsNXv0upYxMJ+LEfF6rZQ/SF01QVVf9axS+YEi+tMJsULT5O7QMLTJADC0yQAwtMk
      AMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC
      0y69K0QqplOqtVhauUfYL/kS19uld4XYzx4SCUdoNNsEEiHpCiGutVfoCtE53RWifIgLJGIx
      wtEoZruNbzwKSFcIcX1delcIv0/BqDcZGxtDUWRSvLjepCuE8DS5ShWeJgEQniYBEJ4mARCe
      JgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQnjb0
      nOD84T75msn37r+BgsP2kw20cJKQ2qdcb3Hr9l0igaFXL8RIDP0KNVpdVlIBsrU+U3oDf2wa
      q1mh6nRwHR+qqmLbtnSFENfa8G1RbAuzC3pIRVV99PttLNvm5tIKvn6V/UyZu8uTuK4rc4LF
      tTV0AOZmUuSrJkv+Hh0nREipoE3doN8yyJRb3LlzB0VRnv0T4jqSrhDC0+QukPC0XxuATz/9
      lFKpNKpahBiJltmj0e7SaHfPvwb45JNPMDsmjuOMsjYhrty/+k//h8NSAzjnIvjjjz/G7/cT
      CUfQNLmXL66Xo1KDvm1fePnJeJhIyH/mY2e+uj/88MPhKhNiBP7dH/4Fx+XmhZf/F7//Qz74
      jVtnPnZmAAqHaXYPcgBMzy+xND89eJVCfAeceREcDEeZnBgnHAqha3ILU7y+zgxAPDnJcWab
      v/nFX7O5kxl1TUKMzLlXuDcW72I7NuFoeJT1CDFS5/4doFsv0HGDTE1OjLIeIUbq3ACoikKv
      Y2I0Ln61LcR3zbmnQBWjxQd/5+8Rlc/0i9fYue8A0ZCPP/qf/4Mv1ndHWY8QI3Xur/em2Wdh
      6SaYjVHWI15z7U6fTx4Pdmfxg7dv4b+i2/HnBmBifJxPf/EFj97/u1fyxMKbjFaH//i/fj7Q
      mPcfzI82AK7r4GhB/tE//idsbu9dyROL76a/+uqAP/7pkwsvvzAV55/+7g+usKJXc2YAOkaR
      zz77Oen9LA/feW/UNYlrrNowWd+/+EfkLft6f5r4zIvg0Ng095Zu0DHblCvVMwfmD/f51eoG
      tuviujZbG6vsZY5wXZfHv/wS60rLFuJynHsN4A/FWFqaZmIsfubjRqvL3akAh0+7QgRi0/Rb
      FY6Ps3Q6FjagSFeI186g80Nc18Wyvvl1aA/wMeavWZZ9ah2Dvpwcxzk9/rnHzgxAdnedYrUJ
      NAnEzv5LsN3vkM61mFqexXE1apUsoKBpJvVaiVLFYG48ASBzgl8jqjrYLFpFUU7NKRnmtaBp
      vlPrGLTHgqqqp8c/v+6zBszcvMPEjVtPn1w/c6Urd9+g3bWIBlUsN8qd5ZuoeoigX2N2fgnN
      f/Y4Ia6TM+OsaTqhUAhdsdnYPvsPYZoeIB6NoPp0/JqPcCRG0H+SJ92vI41QxHfBudcAu08e
      c5CroGgBOn2boC6nMa+D//Df/pJfbB5fePnf++A+//C3vneFFX27zj2hyx7nuXt3mVYlx+O1
      rVHWJK6Q7ThY9sX/Oa/5DYxz3wHmp1M8frzG3YdvE4/LR6LF6+ncdwDXtTFbTfKVNqnx6Chr
      EmJkzg1Au90mFJ/g9q25UdYjxEidGYBuy6BcbZDd3yVXrIy6JiFG5swAbPzq55TbNsFonDdv
      L4y6JiFG5syL4Efvf8iDfo+D9A67mSPuLUsIxOvp3LtAmu5naeXNUdYixMhJe3ThaRIA4WkS
      AOFpEgDhaRIA4WkSAOFpEgDhaRIA4WlDN/7MH+6Tr5k8uP8GKg7bTzbQwkmiuk2+VGXh9j0S
      4bO/l0mI62LoABitLivPdYXwx6axmhWiqVmK5TIds0804JOuENfMq3ZUcJzBVvByV4jB+wTZ
      9uV2hXje0AGwbQuzA/qYiqr66PfbWLYNio+Z1BjlRpOp8ZMv1xi0k4C4QoN2VFDUU50cFHWw
      FSiKcmr8MK8FVfWdruEVt+F5QwdgfiZFrmay5O/RcUKElAra9A3aRpVCtcfS7QWUp5Uqg1Ys
      rszAR0I5ffyGOZKnxg+xAkV5xdfQrxk/dABiyRSx5MnPUSC6uPz0kTEm5EslxXeEnJsIT5MA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhP
      kwAITxt6QowYXLdnUWmYF15eURRmXvh6qj/7dHugOdbvP5gnGQtdeHmvuZyuEO5JVwhfJEnc
      75ArVqQrxBnW9kt89Af/78LLhwM6//3f/vjU//2XP/58oEnhy7NJCcCv8UpdIe4+3xUiftIV
      IjF/B9vq0Gr2pCvECxzHHnjMed0MLurljgqDHQvpCnEOy7ZoP98VonfSFSKfTeMLTXAjFX1W
      qXSFODHMfjivm8GFx7/QUWHQWemvRVcI9Qq6QizMpMjXOtz6uiuEWkGbnqXfKFEtHhMOh0lE
      Ak8Llq4QJwbfD6+87161q8Pr0BWCUXaFmEgMu0ohRk7uAg3gD/7sl/zJT59cePm//fAm//If
      vH+FFYlX5akANM0etnPxi7CQX8evf3Pu6Dgu9gAXgYNeMIrR81QA/vV//phssX7h5f/5j9/j
      t95dusKKxLdNbs8IT5MACE+TAAhPkwAIT5MACE/7ztwF6vYtHu8WBhrz6PY0uvZqHyUQr7fv
      TACMZpd//4c/GWjMf/03vyOfhBS/lpwCCU+TAAhPG9kp0KdrWf7ok4t/jmZ2Iso/+/F7V1iR
      ECMMQLXRYS1dvPDyZrd/hdUIcUJOgYSnSQCEp0kAhKcNHYB2vcpe5uhkkrXrkjvcp1Rr4th9
      CqXyZdYoxJUZOgDp7BFRt06hZdPrGNS7PoqHGQyjxsHh4WXWKMSVGfoukKbrxCN+cj0Hx28T
      DIToW21i4ynChRJw0s7i67YozgAzsb52up3G4C1FXmynAYO2BHmxHcdg2+C6L7YUeR3aogy6
      D15sizLMPrjctijPDx86ANGAxsZxm3srFn07RNvYQQsnqR4fUK1WqRgtxhMR4KS1xzDtMDTt
      m/KGaQ/i8/lOrWPQngaqenq8ogy2DYqinhqvqoNvw+n6B/fiPhi0u4KqvrgNg+4D5ZWPo6a9
      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
      TQymKBQK/H+gRN8BsFxPggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 20 Customers by Total Money ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAetElEQVR4nO3dSYwcWX7f8W8sue9ZlVVZ+0IWySbZ7J7ulrqnpzWjmZFkAQYEyYAN2YAu
      si8GbJ+8HAzIDfhs+GQDhg0LXgRfdLBkS8JIGEFj2DO9sckmi6x9r8zKfd9jeT6QzdHMVARZ
      7GKRUrwP0GB25b+iXmTkL+O9FxEZihBCIEkepb7sBkjSyyQDIHmaDMBLsrm5CYMGmwdFx5of
      /uDP+OjTO1g/1Uk1+y0+/uQu9x8+ZG97C+PLArPLw419ALa2NrGFYNRrcHd1k4PtNW7fWcX6
      mb9i0qi3n7ndwjbY2NrheOs++XqXra3tJ8/tb25yktuh0jGf/KzRqD/6PWFx7/YnbOwePVr3
      53Syu8ZRufXcv//T9HNbknQmDx4+4MqEjy8eHHG4tcrK9Zvkth6iRscQ3QoilKZY75Dtt/jj
      HwxJqgbhkE69NWQs2GOzEOLyXJSTch4QHBwdc3llgbure3Qq+/zo3ib/6NIKq599xvSbP8eP
      vv9Dfu3XfoXPP/2UpYkI+bZKqVxiaT7JH/zPj/lbv/5Ndg+OmZ9fYH1rD10VRJNZUoEhxXqf
      SCzIqDfkvQ++wdqDVSYSGmapR6c7wOg3OWmMENUiiawf33iIB7lNkmPj/PmffY/f/K1/gFp9
      SCs4z9cXsvzh//oDjF6TUnPAtcuLrK89YHbxEnuHeYLhGN987y32N+9zXDNIBC16pg+EydJ4
      iFEky+rtT5n71e+ey3aQe4CXyDRNfP4AijCoHD3ko9VDLMvkMFfk3XfeoHJygG/yKjSPef3t
      dzjKl5kJdGkRZ+XqFZq1R5+utz/+CEv3MRoOwOqQrxosTmcAaPRMEhEdUFAVldzxMb1GieYA
      rEEbSw+yvHSJ/bV1vvbBB6x+8gMMPQ4Iuo0aH330EZpisbd3yK2338WnqoT8OlYgTbe4Tmpi
      hoPDQ3a3tp7sXY437nHcHCBUP0tLS2TH41iWhabpqKoKwubjjz5FQbC/t4vdb3B/fRtffIJq
      4RjLsrj3cIf33/0aIb+PSrmI0q/zvc92mRxPYZv9c9sG2ocffvjhuS1NemYh1eb+bomfe+sG
      3VaT+OQyEyGLaHqS7OQ4kxMThCJx3rh1A1DIZrMElBHFQZA3rs4SCMWJhX2k0ylWrqxQq7eZ
      nZ0lFE6SDJoYaojlxXl0s0mhF2EmAbtHJWazKUrNAZmJCSxzwPjEEmJY4fKNG6x9cY9b77xP
      JBJhLBUjnUozP5PBUAJMTc0wMz2JqihENAGxccK6yvLV1+g3a6QyWeZmp0iNjzG9dBWrVSUz
      NU08oGD5okwtXKK4fY/WUDCWSrIwl8VUA0wko5iqn+nZOcbHxkhGQxRyh1y5vMiDjSPi0QAj
      E269+TrdnsVMHIodnaX57LlsB+UipkFt236UfOnCCWFRLFXJTk687Kaci3qlSDiZIaCfz/vp
      QgLwaPenveg/I0lnJj+WJU870yyQsC027n3KxNX3EK0cxWqLxcU5trd2SE3OYHdrtIaChWwC
      JZSmVi6zMD/zotouSV/ZGadBFTLJCAMTcrt7hKIJjo7yLL92g/zeFqhBJhMq1UqFncIBX3/v
      HWzbxrZt5BkX0qvoTAFQVBVd1xgCoUiMxbkMGxs5Wu0uhgWYQ/qKgs/vZ2E2RrXWZD6bRggh
      xwDSK+lMg2DLGLC1uY0ajLIwPc7RSYXlpXmO9/cYm5pHDJo0+oLJVBjhC9PvtIgnEthyECy9
      ouQskORpF3oqRD/3ewjbcHw+mP11VF/yAlsked3FBuDk98EeOD4fGP8OyABIF0geB5A8TQZA
      8jQZAMnTZAAkT5MBkDxNBkDyNBkAydNkACRPkwGQPE0GQPI0GQDJ02QAJE+TAZA87UwBEMJm
      +8HnNAePHt/94h62OWD13j1OKg1yB7s83Nim26zQHVnkcicvqt2SdC7OdlG8EMRDGl0DBpUD
      OiOLYi7PwtXrnOxvgRpgLKJTLhU5qhxw681bT64JfhaWZYH1s99eKUkvypkCoKoaAb8PEyhX
      a3RqFZohHT01xLIF2CaGoaBqOqlknF6vTzwYQ1GUZ/piLFVV5RdoSRfqTAGwjAH52ggG+1y/
      9TYz83WSiRi72ztMzS1h9xs0+4Lp8SgT/hidZg0UBeXxf0/zrHWSdF4u9Jrg2me/4XpFWOL1
      /4AWmn/RzZGkJ2R/Q/I0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT5MBkDxNBkDyNBkAydNk
      ACRPkwGQPE0GQPI0GQDJ02QAJE870wUxtmWydudHTF7/Bcz6PuVKnez0HLncMcnMFHa3Rnso
      WJhKoITHqJQqXFqcfVFtl6Sv7Iy3SdWYnkzTtyCbnaXT7lAqV1m5/jq5vU3QQkyPqdSqNbbu
      H/KLv/Dume4TbFkWwjSfe2Uk6azOeI8wgWmYmIbB7tYGqewCSq9GuVrFsBUwujQthVAwwJVL
      aXLFCkszE6jPeJ9gTdPQ9Au9bZnkcWfsAhl0RBSlWyKWSNKolpiaXWBULZC9vIIYdmgPBelY
      EKEHGPV7L6rdknQuzhQATQ+wdOnSk/+ffPxvePpxP9+XIBT9cb0vEvmq7ZOkF0rOAkmeJgMg
      eZoMgORpMgCSp8kASJ4mAyB5mgyA5GkyAJKnyQBIniYDIHmaDIDkaTIAkqfJAEieJgMgeZoM
      gORpZ7tNqm2xef8zJq68y7C6T7HW4crKElub26QnZ7F7NVoDm4WpJITS1MolFuZmXlTbJekr
      O+P1hwpjiTB9Ezo9g2vLGT6/u8Xrb90kv78FapCJhEqlXGa3sM97774jrwmWXmlnvChexadr
      jADLMOi2u0SjAdrdHoYFmEP6qoLu9zM3E6XWaDE3mULIa4KlV9SZ7xN80rBRBvssLMxQqHa4
      eXORw71dFpYuIQZNGn3BZDoMvgi9dpMXfg9WSfoK5H2CJU+Ts0CSp8kASJ52agC+//3vX3Q7
      JOmlODUAq6urfPLJJ5hySlL6a86xC/T555/zF3/xF9Tr9YtsjyRdqFOnQX/7t38bRVFQFIVg
      MHjRbZKkC3PqHiAWiwGCSCRMv+88bSlJf9Wdugfo1Qv81//x+ywvLxPPzPP+2zcvul2SdCFO
      DUAokeE73/wGza7BzOzURbdJki7MqV0gRdWo1upkMuOEAv6LbpMkXRjHWSC/YnHn7l1yxepF
      tkeSLpRjAHSfD8U2qDXaF9keSbpQ7qdCKBoIeTBM+uvLMQDBYAhN15memr7I9kjShXIMQL0z
      5Nvf+ga10smpz5vGkFa7g0DQabcwLRtjNKDbG2BbJrYQjEajF9ZwSToPjhfELMxOcff+OvPL
      V099fuPhGkG/4ERPYAkbRAkx7GEjGE+GsXwJ+obNynz2hTVekr4qxwAcHOWYn1skHg2f+rym
      CertIf6wwcrVyxzvbiLCcdJhlVa7ydpWib/x7fflNcHSK80xAP1ui+PjY6b1EOlE9JQKlUDQ
      TzIe4eHqfeKpcejWOOwIFrJJvj61zNbOPtdWluR9gqVXluO7LejXKZZKxMZP/1qTazffePJ4
      bv7xbVKZ/YmadHzpq7dQkl6gUwfBw14bzRem1+2gavKiMemvr1P3AA9u/z92C30CsSSvLc9d
      dJsk6cKcGoC3fuFXuTnosbmxxs5BnqvLs6eVSdJfeY5jAH8wzM033r7ItkjShZMdfMnTZAAk
      T5MBkDxNBkDyNBkAydNkACRPkwGQPE0GQPI0GQDJ02QAJE+TAZA87bmvPhFCIIRAUZQn/z76
      OTx+CPDk55L0KnruABzsbNA3FabGkuzkCoQiMUSvSd8UzE3EsYNpmu0u1+Tp1NIr7LkDUC5X
      CIZDbB+OuHHr5qNrgiMpJr+8JnhzTV4TLL3ynjsAqWSC3shgPBXlwf17ROMp7F6d/aZgfjLB
      O2/Os7mzz2vymmDpFfbc77bLr73+5PHiKY8AJscSz7t4SboQchZI8jQZAMnTZAAkT5MBkDxN
      BkDyNBkAydNkACRPkwGQPE0GQPI0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT/tKAWg0m4Cg
      UioyMi2GvTbVRgvLGGLagn6/f07NlKQX47kviOm3qvzwk1W+cWuZ5lCjuL0NhoGuKwzDfkZq
      BKH6WJoJnWd7JelcPXcA7t69C5bJfqHByvXr5HabiFCUVFil3W6ykSvz3W99XV4TLL3SnjsA
      X//md9nd32duIsnq6n0S45OIXo1cRbCQTfH+7BX29g64cnlRXhMsvbK+0rtteXERgK997c3H
      P5n6iecTlxe/yuIl6YWTs0CSp8kASJ4mAyB5mgyA5GkyAJKnyQBIniYDIHmaDIDkaTIAkqfJ
      AEieJgMgeZoMgORpMgCSp8kASJ4mAyB52nMHwDIN2p0uQgh63Q6WbWMaI/qDIbZlYguBYRjn
      2VZJOnfPfUFMtVyi3ayQI4KJjaqoiGEXS0AmFcb2JeiNLFYWpp6+MEl6SZ47ALFYhFK1RSSs
      sjC39Og+weHEj+8TvFWS9wmWXnnPHYC1Bw8IxNIkYmEert4nnhxD9OoctgXz2QTvvbPE1s4+
      157jPsHC6jGq/V+XSpVA5peet+mS9MRzB+Ctd7/x5HE6k338aO4nasYS0edatm006e79W5cK
      TQZAOhdyFkjyNBkAydNkACRPkwGQPE0GQPI0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT5MB
      kDztXAPQa9c5KdUwh30MS9DpdM5z8ZJ07s7vfkTCYu/ghFBAodDTGBLCF4wQfb4TQiXpQpxj
      AGx8wRCxsEq73WLnpMoH7//8uS3eyU6uxv/+0abj8xPJCH/3l15/4e2Q/mo6vwCoOj4x5KQm
      WMiOMT5/lZNcjuWl+XP7E6cpN3v8+ef7js9fmk49CcD3PtnmTz7edqz9+ddm+HuPa3/vs99l
      9eSeY+3fvPHrfLD8redrtPTKOMdbMiosrVz7iZ/EX/Cb/6zq7QF7Jw3H55enUk8elzslDup7
      jrWtQfPJ43/4b/6IfLXtWPuv//63uXVpkqFh8nf+1e+7tvG//cvfIB4JsF3e5Hf+5J871qVC
      af7d3/7PAPz55p/ynz769461b0y/xb/4pd8B4E/X/5jbR5841r63+A2+vfLLAPz3z36Xo/qB
      Y+0/+dY/I+KPkG/m+C+f/EfHumggyj/+5j8F4Ivc5/zxwz90rF0au8RvvvVbAPzZxp/w2eHH
      jrXvLrzPd678CgDD6g+wRxXHWn/yHbTQAgDfW/8jDOvRFzYo4lku1v0KbNvGsixUVcU2GoDz
      n1P1OLZQUBWwzaZjHSiovuSjZduC7sD52yc0VSEWDmDbNiPTZjByvubYr2uEgz5s22Zg9p+8
      SKcJ+kL4VB+KotDuj7Bt5/WKhvyoCiiKSrM7cFkvSEQCCCEQ2HSGzpMIiqISD8axbRvTNukb
      PcdaXdOJ+KPYts3QGjIyh461AT1AQA8C0Bt1MW3n1ysejCMEZ2urMOmPzr+tWB2EcG6rokUQ
      6KiqSmvQfHKN+gsPADwKgar+eMLpyR9XlGeqFV/WCvETv+O0XMuy0DTNpVbw5Vr/dBuEEAgh
      frYNto1AQVVVvvwVt/UwDQPN5+PLZ05t619at/NZrye/wWAwIhgM/MRPT68F2zIRior2+Lmf
      Xq+z/P0va23bQlWfpa0ANoYh8Pm0p9Y+ra0/3rYC2wZN+/EyfnaZ4mIC8NNONtfIG4JUOMrc
      /Cw+zXk29mh7nWpvyOT0Is3SCdeuX3Os3drcBHOA0DTUYIbLCxMOlRY/+j8/JDU5yUR2mrTr
      tcsjtjaPaNaqCBRuvfsOgVPe8ADmqM/hUR5FVSnkirzzwXv4HJbaKByxX+0Q1hUM4ePGtUuO
      LdjZ2kITJj2hoGphrl127lrev/0RIhDh5LjIux98QDIadKi0Odo/wBTQrpTIrNxkKhk5tbK0
      v81A0ah2BihC4c2bzttgZ32VRruDqfiJxlLcuLrkWFs6OX689+7R7cW5eWPOodLm+OAAw4Z2
      tcz4pRtMp05vq2X2+OzTe5i2ja75efu9dxz7+d1K/uUcCFO1ACtXrzKTHaNwUnStDYbDLF2+
      xrBZpDeyXGtjYT+5UpV+f0g0FnKtzWRnuLpyiVGn4dqFAh+22aXd66L4A45vaHj0rRaGDVNT
      U0yMpzk9Jo/ouo7yeG/j87ktFRKxELlikX5vQCR6+ob/0muvv0HIr5OZmnV58wMoDEcG2akp
      prJZ9FM/mR+JpVOU8kd0uwNC4bDr3/cFwly9eo1rV1fw6+5vL2M0JDk+ydTUFMGA22ugMBh+
      2dZJfKrzK6ugomsquq6h6rrrNlB1/eUEYGxmnN0Haxwe5xg+5XuAgsEgh3u7TC1cZiY77lrr
      C8Z488Y1UHWCAb9LpYpPM9jZ2aNUqYLLxgfQVJXpmWl8gYDrCyqEwBx0OTg8xPT5cfsimOHI
      JBSNcfnKNa5ccp8sUFWV9MQMYb+Grrt/vUyrXqPX6WDZJobLuAQgmU5TzB1Q7gxIRAKOdZru
      wxdOMZEME/C7va6Pvi8qXyjx8P4qyVTKtVZRFMrlMoFAhJhrWP9SW9t9EhGXWlUlmUw+eq2C
      7mENxpIvJwD1fIHp5Tn6Iw2j5360uFqusnRpkc31DarVmmvt8cE+u0clXn9tkfxxyaVS0BsK
      zEGPubkJyhXnGRwY0h/5qNcbxBQLtyFsr1klmBij0ewiBj1sl9puo8vEZIrtzQ2OTsqu61Wu
      NshEVKITszTKzjMdACflOpeXZxhLBNnedVuuRT53Qm8IIcWk03feC1ZzOSZnx2n1dXpN922A
      bWHaCqFIjHTS/Shooz1gKhlk+2Cfes3tffDjtoZVi7brHhtGoxF+f4DMxKTrG7xxcoT24Ycf
      fui6tBcgGA6hqkHiYRV/MEIk4pzUaDxKq9UlGvKhh2LEY85dgHgsjK35iARDhKJRgn73rsXc
      wiKqgGg8hq45fbZrmMM2sWiEhqEwm0mfOugF0PwBqsUSU9kxtFCMpEt3RdM1DKEwOz1N0K+j
      684z0qGADyWYwC+GhONJwkHnT2vMAcXGkIW5GZLJGLrj+EohGg5QKZ1AOM3s5BgOq0UkEWd3
      54hkyCKUniIRde5eBsMRdEzqrR5T2QnH1wogEgkRiqXwY6L4wy57AZWALqjWali+GHNTGce2
      KopGPBahWi4TG88QDTrvsYLRxMvZA5SP8rQ7FfbzFXL5E9fa0vER3eEIgaDZbLnWHuwfYnYb
      tEyTk0O3sYXN/tY2Gxsb1LsGAd2tY9Oj29OolOuIbouRS2WnWqDVH1Gtt0gmEy4TvtCpl6lU
      K+weFtjbcT7eAJA7Pia3u8ZBoUax4L63yB3nwRpRrLbw+9w274hcvg6Kht2t0eg5r1k1d4Q/
      rFNpCeqlguvfP9jaoGvAVCbG5s6Ra221dMLm5gb54glVl+MoYLJ/kKfT7qAaHeod5/2wZfRY
      W99lfGqG/M4WbvuKbrVwngfCnl0kGWPn6ISFK9eoFd0DEInHqJUaDFVBLJ5xrU0kk2SmZzna
      fYDiT7vWZrIzLC7P06iW6Y1MIo6DMB+jQY34+BS63Xft12t6gIXlS4zHgxROioSnpxzHDPF0
      Eo0oolfh2HAf3EfjCZLJBWxFoVJ1/xBIjWdZXF6k06jS6Q2JO/aXNWyjSyg+TiIg8LkMWMOx
      GP2DPD5dxRd079bE4lGK9QYqFvGxadfaUCjM2EyWsH/I4UHXpVJlbGKCxegS5qCDz2UcpGo+
      /LpNrVZDD4Zdt1cgEn05AQjHo6iaxvr9u8zOL7vWtpsd/MEQ87OzBP3uzdV8ARrFY9o9m5kF
      twGYiqaOWF9fx7JsllfcwqKg6z76rTytrs6M86wekVQG32jEaGQw7PWxcT7dVgBHezsEAgrR
      WNx1vSazWUzLRsNCmO5hCfrh7u2PMZQwN16/7lKpomoCTVOJhAOYpgWB019fG4VgKEStUCQ1
      4f5t35ZtY9sWlmViWu4THIN+j8LWGpYxYvbSDZdKBWvUpVDsYNmwknF5Wys6l648mqYtHR4z
      Apw+Aga90cvpArWKBRIzC8SicTqNqmvtcGgxMzNJ/nCPfNG9tnB8yH6+ys3XFimX3QZrgnqj
      w8LiEqmIRr3lNrTVCAZ9+AMBJqemXT9RLKPLp7fvkM/nOSmUXLtArUqNpWvzaHoKa+D26Qf5
      vXXWdw/J5/PUW0+ZNGi0WZjLMp6OcHjg9nrZmARIBGy29w4ZGM5v1kAojGJbhMJxpp4yE9do
      9ZhOxxibnqfbdDuaD412H/odMtMZqhW3PZtFszVgcXGJsGbRcRkEC9vgs08+IZ/Pk88XXCci
      +q3GyxkEh+IJtu7dYWHlGvFomGDQeVorFA4RDIVJp8cQtkkg4DwAzGTGabWa9IY2c/MzrgNA
      n2Kwf5Sj3jVZWZ7DeWpZEI4mMLoNhoqfsVTMsVujaj6EZTEzv0giHiEUCjnWhmMRyqU26ZiC
      FooRjzpPBCTS46QTScbH0+iq5jppENBVCuUmKBqLi7PojiumYo26BBMTxII+QtEYfoeuhaqq
      DE2beCyCz+fD73LcIhaPE06kiYV0hFBd2xry6/giUba3j7l18wqq44BZRbV6HOYLdAyNpbms
      4yAYRSU1NoYqTIKJFOmE8/aKpNIvZw9QPdhlYmmFQv6EQt59UNVr13iw+pD19XXWNnZdazfX
      11lYvsx4XOfgyG0a1CZXbDJqN5meiJIrun1S9djdyVFpWViNEkOXA+edagFD8bGxsUGlUMKt
      s1La30cwYCffpl52ayucHB2wtbPF+voaB8fuBw7zxQq2ZTGTCbJ/5LYHMChXO+T3txkOh3QG
      zoPgwu4W+HVaA5Pj/UPXv18t5FhbW2djc5PDp7Q1VyhTLVe4dW2aHde9lUGx2qNdb5CJ6VTb
      fcdKy2hTKBQplDp061XXbdCpnrycMUAyO4nRVUhlBDvH7t2aeDKFCKYYT0bJ5/KutZnMGIcH
      +2CbZOedTy0AhfHMGPGlRWyzi+FzO2ocQLE7pDKTqPYAt8NA4USKiN1nOh1mfTvnetAsPj6G
      GUownrSpP6UbmE6nCKTCpGM6+Zz7cYDJsSSbuwdsH9hcvubWr9YZG0+SnRjn4b1VZsac+/bp
      qSxtK0AkYXFUcj45DSA9liKQCpGO+cjn3GesIkEfXdNPQAuSSrsNrnXGJ8ZZWl5k1G8TcDlq
      rPmi+JQTKt0ayUzW9Q0eHZt+SWOAWodQ0GZr7xi/S5cGoFpuoNttbt/5gv5Tbh4zMCAZ1hkZ
      IwYun2ggsExBIX/Azn4OzeXQOlhE4pO0K0cUynXXfn2/28Xv19jY2kUPuB8J7nVGqGaHta0N
      eiO3nipU6l1Et8idu/cxFfcjwb2hxXQmhbANui4Ht8DEtjS2NtYZoRL0Ob9VWvUuAa3P9lGR
      gNsxCKBS6yK6Ze7cvY/xlLYqeoCwZrCxf+T6YQEmlgn5o132c0XXYwuW2SUQmSAS0Ol3e67b
      q1E4eTkBMEd9Nh5uMnPpKpjupwf3Ok3W1w557c2bDDrug6pmtcxRscX1K4u0mm6DRUH5JE9r
      IFiaGaPteoqyTe5wB+FLkQrorvPKtjlib3uTRGYRH6brAGzU77B6d5Mrt25iPmUQ3GnU2Nkv
      cf3GVbpt92nQWqlAqTngtUsz1BtuyxUUcocM7QBT6Sg9l9PER4MOD77YYuX1m5gD51OZATrN
      Gjv7Ra7fvEa39QxtbQx47fIs9br79irkjuhbfqbTUXpDl60gLI4PNtHDU0R1cPvMtEaDl3M2
      KAiMkYGm65RLFSazTmdtPjq/xhiN8Pl9lEoVJifdam1GholPtanWB2QyScda27YwLRt71GNg
      +0m6nDxnWSa2UOhUK4QnJhzPBgWBaRgomk6tVCadnXTcC5xtvR69XrpPoVJpMTEx5lxr2xim
      iaYY1Fs242Mxx1rbsrBswbDTQgnFiARP71p82Vbd73u0vZ6prSqVSvNc22raglG3BcEYUYe2
      Ptq7PzplulmuEM9OupzAKF7OGGDYrnB3I0ciGqRUaboGoJLfJ1frEfRpNNsD1xd/b3ONga2h
      KkMGo6hLAARr979ADYQZ9ZpEM5ddAmDxxe3bhOMJKod5bv3yBE6dAGPQ5s79LeKxCKVCla+7
      BKBTzbNxVCMa8lGtd1zX63hvk+bARldtOj3F9U21tbaKpfpRlB6GPeHyprK5/8UdAuEo7WqF
      2RtfcwxAt5Zn7aBKLOx/altze1s0BtYzt9VU/ahKH8Mad23r6hd38IejdKoVpq9/zTEAtjXi
      zu27RBMJysdF3nYJwLBTBfES2LYtKpWKEEKIUrHkWmuNeqLW6DxT7aBTF62eIYQYiVKx5lpb
      q1aEadtiNGiLWqPrWluplIUthGgWS6Jv2451f3m9KsWSMF2WaVuGqNTqQoinr5cxaIl6eyCE
      sESpWHGtbTdroj8yhRADUSo2XGurlbKwhBC9Zl20ekP3tlafra3moC3q7f7jtpZdazvNmugN
      z9jW1lPa+ngb2EKIerEknCsf1b6kLpAkvRrkN8NJnvb/AadlOfbA0m43AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='147' name='Total Number of Users' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Profit Over Time' width='192'>
      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
      8Ujz/wF6eOFUEMHOTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trancastions by Type' width='192'>
      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
      3d8AOrLsBiPKInEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Transaction by Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transaction by Sex' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Transactions Per Country' width='192'>
      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
      iQ30/xgkKp5DGtbZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Users Per City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users by Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users by Reg Date' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users by Sex' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADRklEQVR4nO3YQWtcZRiG4XfSWNPWoKJiMdCNFMGFrt36D/1R3UjRulHUWpGIVhpsxWiS
      TmbGhS4qpLsyodzXtfvO2TybG75zFpvNZjMQtXPZA+AyCYC03WcPq1+/mvOf717WFti6/wVw
      fvj5PL3z2WVtga1zBSLtuQGcnq3m8el6ZmYOj87my8OTeXy6nm9+OZkHvy/n/Hw9Xz88m7Wf
      SLzELgxgs9nMFz8ez72Hy5mZeWt/d3ZWq3l0vJzvjs5nf29n7tz/a85Xm1ltdS68WBcGcP/w
      7/nhz/V8f/R0ZmauX92Z49Vi3n/zlfnw3atz96eTeXy2njlbzrdP1lsdDC/S7kUPb9+6Mbff
      e3XuPVrPg6On887VmZtv781yuZ7DJ8u5sXdlDq4v5rfj1Xx04DOCl9eFAfz7Znc+vrmZP043
      s39tZ/b/e/zpB69tZxlswfMDmJnFYjFvXFtsawtsnfsLaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCk7T572Hn9YK7c+uSytsDW/QMKsmzheeQtqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Users per Country' width='192'>
      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
      f83q0megSBRwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
